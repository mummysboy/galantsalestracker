{"ast":null,"code":"var _jsxFileName = \"/Users/isaachirsch/Desktop/GalantCo/SalesTracker/src/Dashboard.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';\nimport { Card, CardContent, CardHeader, CardTitle } from './components/ui/card';\nimport { Button } from './components/ui/button';\nimport CustomerDetailModal from './components/CustomerDetailModal';\nimport PeriodComparison from './components/PeriodComparison';\nimport AlpineReportUpload from './components/AlpineReportUpload';\nimport CSVUpload from './components/CSVUpload';\nimport { analyzeCustomerProgress } from './utils/alpineParser';\nimport { alpineData, customerProgressions } from './data/alpineData';\nimport { Upload, BarChart3 } from 'lucide-react';\n\n// Revenue by Customer Component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RevenueByCustomerComponent = ({\n  revenueByCustomer,\n  alpineData,\n  onCustomerClick,\n  isComparisonMode = false\n}) => {\n  _s();\n  const [showAll, setShowAll] = useState(false);\n  const topCustomers = revenueByCustomer.slice(0, 5);\n  const remainingCustomers = revenueByCustomer.slice(5);\n  const totalRevenue = revenueByCustomer.reduce((sum, customer) => sum + customer.revenue, 0);\n  const formatRevenue = revenue => {\n    return `$${revenue.toLocaleString('en-US', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    })}`;\n  };\n  const getPercentage = revenue => {\n    return (revenue / totalRevenue * 100).toFixed(1);\n  };\n  const handleCustomerClick = fullCustomerName => {\n    if (onCustomerClick && isComparisonMode) {\n      onCustomerClick(fullCustomerName);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold text-gray-900\",\n      children: \"Top Customers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-3\",\n      children: topCustomers.map(customer => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors ${isComparisonMode ? 'cursor-pointer' : ''}`,\n        onClick: () => handleCustomerClick(customer.fullCustomerName),\n        title: isComparisonMode ? \"Click to see detailed comparison\" : \"Customer revenue\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 min-w-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm font-medium text-gray-900 truncate\",\n            children: customer.customer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), customer.customerId && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-blue-600 font-medium\",\n            children: [\"ID: \", customer.customerId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-500\",\n            children: [getPercentage(customer.revenue), \"% of total\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm font-semibold text-gray-900\",\n          children: formatRevenue(customer.revenue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, customer.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), remainingCustomers.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [showAll && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: remainingCustomers.map(customer => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors ${isComparisonMode ? 'cursor-pointer' : ''}`,\n          onClick: () => handleCustomerClick(customer.fullCustomerName),\n          title: isComparisonMode ? \"Click to see detailed comparison\" : \"Customer revenue\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 min-w-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-medium text-gray-900 truncate\",\n              children: customer.customer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this), customer.customerId && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-blue-600 font-medium\",\n              children: [\"ID: \", customer.customerId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500\",\n              children: [getPercentage(customer.revenue), \"% of total\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm font-semibold text-gray-900\",\n            children: formatRevenue(customer.revenue)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }, this)]\n        }, customer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline\",\n        size: \"sm\",\n        onClick: () => setShowAll(!showAll),\n        className: \"w-full\",\n        children: showAll ? 'Show Less' : `Show ${remainingCustomers.length} More`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n// Revenue by Product Component\n_s(RevenueByCustomerComponent, \"XC0nqMp5RnZIWkiCcJL//MdTvak=\");\n_c = RevenueByCustomerComponent;\nconst RevenueByProductComponent = ({\n  revenueByProduct,\n  alpineData\n}) => {\n  _s2();\n  const [showAll, setShowAll] = useState(false);\n  const topProducts = revenueByProduct.slice(0, 5);\n  const remainingProducts = revenueByProduct.slice(5);\n  const totalRevenue = revenueByProduct.reduce((sum, product) => sum + product.revenue, 0);\n  const formatRevenue = revenue => {\n    return `$${revenue.toLocaleString('en-US', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    })}`;\n  };\n  const getPercentage = revenue => {\n    return (revenue / totalRevenue * 100).toFixed(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold text-gray-900\",\n      children: \"Top Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-3\",\n      children: topProducts.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 min-w-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm font-medium text-gray-900 truncate\",\n            children: product.product\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-500\",\n            children: [getPercentage(product.revenue), \"% of total\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm font-semibold text-gray-900\",\n          children: formatRevenue(product.revenue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), remainingProducts.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [showAll && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: remainingProducts.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 min-w-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-medium text-gray-900 truncate\",\n              children: product.product\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500\",\n              children: [getPercentage(product.revenue), \"% of total\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm font-semibold text-gray-900\",\n            children: formatRevenue(product.revenue)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 19\n          }, this)]\n        }, product.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline\",\n        size: \"sm\",\n        onClick: () => setShowAll(!showAll),\n        className: \"w-full\",\n        children: showAll ? 'Show Less' : `Show ${remainingProducts.length} More`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s2(RevenueByProductComponent, \"XC0nqMp5RnZIWkiCcJL//MdTvak=\");\n_c2 = RevenueByProductComponent;\nconst Dashboard = () => {\n  _s3();\n  // Customer modal handlers\n  const handleCustomerClick = customerName => {\n    setSelectedCustomerForModal(customerName);\n    setIsCustomerModalOpen(true);\n  };\n  const handleCloseCustomerModal = () => {\n    setIsCustomerModalOpen(false);\n    setSelectedCustomerForModal(null);\n  };\n\n  // State management\n  const [selectedCustomerForModal, setSelectedCustomerForModal] = useState(null);\n  const [isCustomerModalOpen, setIsCustomerModalOpen] = useState(false);\n  const [showUploadSection, setShowUploadSection] = useState(false);\n  const [currentAlpineData, setCurrentAlpineData] = useState(alpineData);\n  const [currentCustomerProgressions, setCurrentCustomerProgressions] = useState(customerProgressions);\n\n  // Upload handlers\n  const handleAlpineDataParsed = data => {\n    console.log('Dashboard received new data:', {\n      recordCount: data.records.length,\n      periods: Array.from(new Set(data.records.map(r => r.period))),\n      totalRevenue: data.records.reduce((sum, r) => sum + r.revenue, 0),\n      sampleRecords: data.records.slice(0, 3).map(r => ({\n        customer: r.customerName,\n        period: r.period,\n        revenue: r.revenue\n      }))\n    });\n\n    // Merge new data with existing data instead of replacing it\n    const existingPeriods = new Set(currentAlpineData.map(r => r.period));\n    const newPeriods = new Set(data.records.map(r => r.period));\n    console.log('Existing periods:', Array.from(existingPeriods));\n    console.log('New periods:', Array.from(newPeriods));\n\n    // Filter out any existing records for the same periods being uploaded\n    const filteredExistingData = currentAlpineData.filter(record => !newPeriods.has(record.period));\n\n    // Combine filtered existing data with new data\n    const mergedData = [...filteredExistingData, ...data.records];\n    console.log('Merged data:', {\n      recordCount: mergedData.length,\n      periods: Array.from(new Set(mergedData.map(r => r.period))),\n      totalRevenue: mergedData.reduce((sum, r) => sum + r.revenue, 0)\n    });\n    setCurrentAlpineData(mergedData);\n\n    // Recalculate customer progressions based on merged data\n    const allCustomers = Array.from(new Set(mergedData.map(r => r.customerName)));\n    const updatedCustomerProgressions = new Map();\n    allCustomers.forEach(customer => {\n      const progress = analyzeCustomerProgress(mergedData, customer);\n      updatedCustomerProgressions.set(customer, progress);\n    });\n    setCurrentCustomerProgressions(updatedCustomerProgressions);\n    // Don't hide upload section immediately - let user see the results\n    // setShowUploadSection(false); // Hide upload section after successful upload\n  };\n  const handleClearAlpineData = () => {\n    console.log('Clearing Alpine data, resetting to original state');\n    setCurrentAlpineData(alpineData);\n    setCurrentCustomerProgressions(customerProgressions);\n  };\n  const handleCSVDataUploaded = data => {\n    // Handle CSV data if needed\n    console.log('CSV data uploaded:', data);\n  };\n  const handleClearCSVData = () => {\n    // Clear CSV data if needed\n    console.log('CSV data cleared');\n  };\n\n  // Calculate KPIs\n  const kpis = useMemo(() => {\n    const totalRevenue = currentAlpineData.reduce((sum, record) => sum + record.revenue, 0);\n    const totalCases = currentAlpineData.reduce((sum, record) => sum + record.cases, 0);\n\n    // Top customer by revenue\n    const customerRevenue = currentAlpineData.reduce((acc, record) => {\n      acc[record.customerName] = (acc[record.customerName] || 0) + record.revenue;\n      return acc;\n    }, {});\n    const topCustomer = Object.entries(customerRevenue).sort(([, a], [, b]) => b - a)[0];\n\n    // Top product by revenue\n    const productRevenue = currentAlpineData.reduce((acc, record) => {\n      acc[record.productName] = (acc[record.productName] || 0) + record.revenue;\n      return acc;\n    }, {});\n    const topProduct = Object.entries(productRevenue).sort(([, a], [, b]) => b - a)[0];\n    return {\n      totalRevenue,\n      totalCases,\n      topCustomer: topCustomer ? topCustomer[0] : 'N/A',\n      topProduct: topProduct ? topProduct[0] : 'N/A'\n    };\n  }, [currentAlpineData]);\n\n  // Revenue over time data (grouped by periods)\n  const revenueOverTime = useMemo(() => {\n    const periodRevenue = currentAlpineData.reduce((acc, record) => {\n      const period = record.period;\n      acc[period] = (acc[period] || 0) + record.revenue;\n      return acc;\n    }, {});\n    return Object.entries(periodRevenue).sort(([a], [b]) => a.localeCompare(b)).map(([period, revenue]) => ({\n      period,\n      revenue: Math.round(revenue * 100) / 100\n    }));\n  }, [currentAlpineData]);\n\n  // Revenue by customer data\n  const revenueByCustomer = useMemo(() => {\n    const customerRevenue = currentAlpineData.reduce((acc, record) => {\n      acc[record.customerName] = (acc[record.customerName] || 0) + record.revenue;\n      return acc;\n    }, {});\n    const customerIds = currentAlpineData.reduce((acc, record) => {\n      acc[record.customerName] = record.customerId || '';\n      return acc;\n    }, {});\n    return Object.entries(customerRevenue).sort(([, a], [, b]) => b - a).map(([customer, revenue], index) => ({\n      id: `${customer}-${index}`,\n      customer: customer.length > 20 ? customer.substring(0, 20) + '...' : customer,\n      fullCustomerName: customer,\n      customerId: customerIds[customer] || '',\n      revenue: Math.round(revenue * 100) / 100\n    }));\n  }, [currentAlpineData]);\n\n  // Revenue by product data\n  const revenueByProduct = useMemo(() => {\n    const productRevenue = currentAlpineData.reduce((acc, record) => {\n      acc[record.productName] = (acc[record.productName] || 0) + record.revenue;\n      return acc;\n    }, {});\n    return Object.entries(productRevenue).sort(([, a], [, b]) => b - a).map(([product, revenue], index) => ({\n      id: `${product}-${index}`,\n      product: product.length > 20 ? product.substring(0, 20) + '...' : product,\n      fullProduct: product,\n      revenue: Math.round(revenue * 100) / 100\n    }));\n  }, [currentAlpineData]);\n\n  // Product mix pie chart data\n  const productMix = useMemo(() => {\n    const total = currentAlpineData.reduce((sum, record) => sum + record.revenue, 0);\n    return revenueByProduct.slice(0, 8) // Top 8 products\n    .map(product => ({\n      name: product.product.length > 12 ? product.product.substring(0, 12) + '...' : product.product,\n      value: Math.round(product.revenue / total * 100 * 100) / 100\n    }));\n  }, [revenueByProduct, currentAlpineData]);\n  const colors = ['#3B82F6', '#EF4444', '#10B981', '#F59E0B', '#8B5CF6', '#F97316', '#06B6D4', '#84CC16'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-3xl font-bold text-gray-900\",\n              children: \"Alpine Sales Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 mt-2\",\n              children: \"Alpine distributor sales analysis (June - August 2025)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500 mt-1\",\n              children: [currentAlpineData.length, \" sales records from \", new Set(currentAlpineData.map(r => r.period)).size, \" periods\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setShowUploadSection(!showUploadSection),\n            className: \"flex items-center gap-2\",\n            variant: showUploadSection ? \"default\" : \"outline\",\n            children: [showUploadSection ? /*#__PURE__*/_jsxDEV(BarChart3, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 36\n            }, this) : /*#__PURE__*/_jsxDEV(Upload, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 72\n            }, this), showUploadSection ? 'View Dashboard' : 'Upload Data']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), showUploadSection && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8 space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(AlpineReportUpload, {\n          onDataParsed: handleAlpineDataParsed,\n          onClearData: handleClearAlpineData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CSVUpload, {\n          onDataUploaded: handleCSVDataUploaded,\n          onClearData: handleClearCSVData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: \"p-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm font-medium text-gray-600\",\n                  children: \"Total Revenue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-2xl font-bold text-gray-900\",\n                  children: [\"$\", kpis.totalRevenue.toLocaleString('en-US', {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-400\",\n                children: \"\\uD83D\\uDCB0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: \"p-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm font-medium text-gray-600\",\n                  children: \"Total Cases\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-2xl font-bold text-gray-900\",\n                  children: kpis.totalCases.toFixed(0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-400\",\n                children: \"\\uD83D\\uDCE6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: \"p-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm font-medium text-gray-600\",\n                  children: \"Top Customer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-lg font-bold text-gray-900 truncate\",\n                  title: kpis.topCustomer,\n                  children: kpis.topCustomer\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-400\",\n                children: \"\\uD83C\\uDFC6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: \"p-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm font-medium text-gray-600\",\n                  children: \"Top Product\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-lg font-bold text-gray-900 truncate\",\n                  title: kpis.topProduct,\n                  children: kpis.topProduct\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-400\",\n                children: \"\\uD83C\\uDFAF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: /*#__PURE__*/_jsxDEV(CardTitle, {\n              children: \"Revenue by Period\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-64\",\n              children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(LineChart, {\n                  data: revenueOverTime,\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 511,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"period\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    formatter: value => [`$${value.toLocaleString('en-US', {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2\n                    })}`, 'Revenue'],\n                    labelFormatter: label => `Period: ${label}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 514,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Line, {\n                    type: \"monotone\",\n                    dataKey: \"revenue\",\n                    stroke: \"#3B82F6\",\n                    strokeWidth: 2,\n                    dot: {\n                      fill: '#3B82F6',\n                      strokeWidth: 2,\n                      r: 4\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: /*#__PURE__*/_jsxDEV(CardTitle, {\n              children: \"Product Mix\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-64\",\n              children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(PieChart, {\n                  children: [/*#__PURE__*/_jsxDEV(Pie, {\n                    data: productMix,\n                    cx: \"50%\",\n                    cy: \"50%\",\n                    outerRadius: 80,\n                    dataKey: \"value\",\n                    label: ({\n                      name,\n                      value\n                    }) => `${name}: ${value}%`,\n                    children: productMix.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                      fill: colors[index % colors.length]\n                    }, `cell-${index}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 549,\n                      columnNumber: 23\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    formatter: value => [`${value}%`, 'Percentage']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 552,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: /*#__PURE__*/_jsxDEV(CardTitle, {\n              children: \"Revenue by Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(RevenueByCustomerComponent, {\n              revenueByCustomer: revenueByCustomer,\n              alpineData: currentAlpineData,\n              onCustomerClick: handleCustomerClick,\n              isComparisonMode: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: /*#__PURE__*/_jsxDEV(CardTitle, {\n              children: \"Revenue by Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(RevenueByProductComponent, {\n              revenueByProduct: revenueByProduct,\n              alpineData: currentAlpineData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"flex items-center gap-2\",\n            children: \"\\uD83D\\uDCCA Period-to-Period Comparison\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Compare customer performance between any two periods\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(PeriodComparison, {\n            alpineData: currentAlpineData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 9\n      }, this), selectedCustomerForModal && /*#__PURE__*/_jsxDEV(CustomerDetailModal, {\n        customerName: selectedCustomerForModal,\n        currentInvoices: [] // Alpine data doesn't use invoice format\n        ,\n        previousInvoices: [],\n        isOpen: isCustomerModalOpen,\n        onClose: handleCloseCustomerModal,\n        alpineData: currentAlpineData,\n        progressAnalysis: currentCustomerProgressions.get(selectedCustomerForModal)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 396,\n    columnNumber: 5\n  }, this);\n};\n_s3(Dashboard, \"fxpx0WDLgvwFU91/T1aYlUaJmrE=\");\n_c3 = Dashboard;\nexport default Dashboard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"RevenueByCustomerComponent\");\n$RefreshReg$(_c2, \"RevenueByProductComponent\");\n$RefreshReg$(_c3, \"Dashboard\");","map":{"version":3,"names":["React","useState","useMemo","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","PieChart","Pie","Cell","Card","CardContent","CardHeader","CardTitle","Button","CustomerDetailModal","PeriodComparison","AlpineReportUpload","CSVUpload","analyzeCustomerProgress","alpineData","customerProgressions","Upload","BarChart3","jsxDEV","_jsxDEV","Fragment","_Fragment","RevenueByCustomerComponent","revenueByCustomer","onCustomerClick","isComparisonMode","_s","showAll","setShowAll","topCustomers","slice","remainingCustomers","totalRevenue","reduce","sum","customer","revenue","formatRevenue","toLocaleString","minimumFractionDigits","maximumFractionDigits","getPercentage","toFixed","handleCustomerClick","fullCustomerName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","title","customerId","id","length","variant","size","_c","RevenueByProductComponent","revenueByProduct","_s2","topProducts","remainingProducts","product","_c2","Dashboard","_s3","customerName","setSelectedCustomerForModal","setIsCustomerModalOpen","handleCloseCustomerModal","selectedCustomerForModal","isCustomerModalOpen","showUploadSection","setShowUploadSection","currentAlpineData","setCurrentAlpineData","currentCustomerProgressions","setCurrentCustomerProgressions","handleAlpineDataParsed","data","console","log","recordCount","records","periods","Array","from","Set","r","period","sampleRecords","existingPeriods","newPeriods","filteredExistingData","filter","record","has","mergedData","allCustomers","updatedCustomerProgressions","Map","forEach","progress","set","handleClearAlpineData","handleCSVDataUploaded","handleClearCSVData","kpis","totalCases","cases","customerRevenue","acc","topCustomer","Object","entries","sort","a","b","productRevenue","productName","topProduct","revenueOverTime","periodRevenue","localeCompare","Math","round","customerIds","index","substring","fullProduct","productMix","total","name","value","colors","onDataParsed","onClearData","onDataUploaded","width","height","strokeDasharray","dataKey","formatter","labelFormatter","label","type","stroke","strokeWidth","dot","fill","cx","cy","outerRadius","entry","currentInvoices","previousInvoices","isOpen","onClose","progressAnalysis","get","_c3","$RefreshReg$"],"sources":["/Users/isaachirsch/Desktop/GalantCo/SalesTracker/src/Dashboard.tsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell,\n} from 'recharts';\nimport { Card, CardContent, CardHeader, CardTitle } from './components/ui/card';\nimport { Button } from './components/ui/button';\nimport CustomerDetailModal from './components/CustomerDetailModal';\nimport PeriodComparison from './components/PeriodComparison';\nimport AlpineReportUpload from './components/AlpineReportUpload';\nimport CSVUpload from './components/CSVUpload';\nimport { AlpineSalesRecord, analyzeCustomerProgress } from './utils/alpineParser';\nimport { alpineData, customerProgressions } from './data/alpineData';\nimport { Upload, BarChart3 } from 'lucide-react';\n\n// Revenue by Customer Component\ninterface RevenueByCustomerProps {\n  revenueByCustomer: Array<{ id: string; customer: string; fullCustomerName: string; customerId: string; revenue: number }>;\n  alpineData: AlpineSalesRecord[];\n  onCustomerClick?: (customerName: string) => void;\n  isComparisonMode?: boolean;\n}\n\nconst RevenueByCustomerComponent: React.FC<RevenueByCustomerProps> = ({ \n  revenueByCustomer, \n  alpineData,\n  onCustomerClick,\n  isComparisonMode = false \n}) => {\n  const [showAll, setShowAll] = useState(false);\n  \n  const topCustomers = revenueByCustomer.slice(0, 5);\n  const remainingCustomers = revenueByCustomer.slice(5);\n  const totalRevenue = revenueByCustomer.reduce((sum, customer) => sum + customer.revenue, 0);\n  \n  const formatRevenue = (revenue: number) => {\n    return `$${revenue.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;\n  };\n\n  const getPercentage = (revenue: number) => {\n    return ((revenue / totalRevenue) * 100).toFixed(1);\n  };\n\n\n  const handleCustomerClick = (fullCustomerName: string) => {\n    if (onCustomerClick && isComparisonMode) {\n      onCustomerClick(fullCustomerName);\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <h3 className=\"text-lg font-semibold text-gray-900\">Top Customers</h3>\n      \n      {/* Top 5 Customers */}\n      <div className=\"space-y-3\">\n        {topCustomers.map((customer) => (\n          <div \n            key={customer.id}\n            className={`flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors ${\n              isComparisonMode ? 'cursor-pointer' : ''\n            }`}\n            onClick={() => handleCustomerClick(customer.fullCustomerName)}\n            title={isComparisonMode ? \"Click to see detailed comparison\" : \"Customer revenue\"}\n          >\n            <div className=\"flex-1 min-w-0\">\n              <div className=\"text-sm font-medium text-gray-900 truncate\">\n                  {customer.customer}\n                </div>\n              {customer.customerId && (\n                <div className=\"text-xs text-blue-600 font-medium\">ID: {customer.customerId}</div>\n              )}\n              <div className=\"text-xs text-gray-500\">{getPercentage(customer.revenue)}% of total</div>\n              </div>\n            <div className=\"text-sm font-semibold text-gray-900\">\n              {formatRevenue(customer.revenue)}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Remaining Customers */}\n      {remainingCustomers.length > 0 && (\n        <>\n          {showAll && (\n            <div className=\"space-y-3\">\n              {remainingCustomers.map((customer) => (\n                <div \n                  key={customer.id}\n                  className={`flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors ${\n                    isComparisonMode ? 'cursor-pointer' : ''\n                  }`}\n                  onClick={() => handleCustomerClick(customer.fullCustomerName)}\n                  title={isComparisonMode ? \"Click to see detailed comparison\" : \"Customer revenue\"}\n                >\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"text-sm font-medium text-gray-900 truncate\">\n                    {customer.customer}\n                  </div>\n                  {customer.customerId && (\n                    <div className=\"text-xs text-blue-600 font-medium\">ID: {customer.customerId}</div>\n                  )}\n                  <div className=\"text-xs text-gray-500\">{getPercentage(customer.revenue)}% of total</div>\n                </div>\n                  <div className=\"text-sm font-semibold text-gray-900\">\n                    {formatRevenue(customer.revenue)}\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => setShowAll(!showAll)}\n            className=\"w-full\"\n          >\n            {showAll ? 'Show Less' : `Show ${remainingCustomers.length} More`}\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n\n// Revenue by Product Component\ninterface RevenueByProductProps {\n  revenueByProduct: Array<{ id: string; product: string; fullProduct: string; revenue: number }>;\n  alpineData: AlpineSalesRecord[];\n}\n\nconst RevenueByProductComponent: React.FC<RevenueByProductProps> = ({ revenueByProduct, alpineData }) => {\n  const [showAll, setShowAll] = useState(false);\n  \n  const topProducts = revenueByProduct.slice(0, 5);\n  const remainingProducts = revenueByProduct.slice(5);\n  const totalRevenue = revenueByProduct.reduce((sum, product) => sum + product.revenue, 0);\n  \n  const formatRevenue = (revenue: number) => {\n    return `$${revenue.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;\n  };\n\n  const getPercentage = (revenue: number) => {\n    return ((revenue / totalRevenue) * 100).toFixed(1);\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <h3 className=\"text-lg font-semibold text-gray-900\">Top Products</h3>\n      \n      {/* Top 5 Products */}\n      <div className=\"space-y-3\">\n        {topProducts.map((product) => (\n          <div \n            key={product.id}\n            className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors\"\n          >\n            <div className=\"flex-1 min-w-0\">\n              <div className=\"text-sm font-medium text-gray-900 truncate\">\n                  {product.product}\n                </div>\n              <div className=\"text-xs text-gray-500\">{getPercentage(product.revenue)}% of total</div>\n              </div>\n            <div className=\"text-sm font-semibold text-gray-900\">\n              {formatRevenue(product.revenue)}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Remaining Products */}\n      {remainingProducts.length > 0 && (\n        <>\n          {showAll && (\n            <div className=\"space-y-3\">\n              {remainingProducts.map((product) => (\n                <div \n                  key={product.id}\n                  className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors\"\n                >\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"text-sm font-medium text-gray-900 truncate\">\n                    {product.product}\n                  </div>\n                  <div className=\"text-xs text-gray-500\">{getPercentage(product.revenue)}% of total</div>\n                </div>\n                  <div className=\"text-sm font-semibold text-gray-900\">\n                    {formatRevenue(product.revenue)}\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => setShowAll(!showAll)}\n            className=\"w-full\"\n          >\n            {showAll ? 'Show Less' : `Show ${remainingProducts.length} More`}\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst Dashboard: React.FC = () => {\n  // Customer modal handlers\n  const handleCustomerClick = (customerName: string) => {\n    setSelectedCustomerForModal(customerName);\n    setIsCustomerModalOpen(true);\n  };\n\n  const handleCloseCustomerModal = () => {\n    setIsCustomerModalOpen(false);\n    setSelectedCustomerForModal(null);\n  };\n\n  // State management\n  const [selectedCustomerForModal, setSelectedCustomerForModal] = useState<string | null>(null);\n  const [isCustomerModalOpen, setIsCustomerModalOpen] = useState(false);\n  const [showUploadSection, setShowUploadSection] = useState(false);\n  const [currentAlpineData, setCurrentAlpineData] = useState<AlpineSalesRecord[]>(alpineData);\n  const [currentCustomerProgressions, setCurrentCustomerProgressions] = useState<Map<string, any>>(customerProgressions);\n\n  // Upload handlers\n  const handleAlpineDataParsed = (data: { records: AlpineSalesRecord[]; customerProgressions: Map<string, any> }) => {\n    console.log('Dashboard received new data:', {\n      recordCount: data.records.length,\n      periods: Array.from(new Set(data.records.map(r => r.period))),\n      totalRevenue: data.records.reduce((sum, r) => sum + r.revenue, 0),\n      sampleRecords: data.records.slice(0, 3).map(r => ({ customer: r.customerName, period: r.period, revenue: r.revenue }))\n    });\n\n    // Merge new data with existing data instead of replacing it\n    const existingPeriods = new Set(currentAlpineData.map(r => r.period));\n    const newPeriods = new Set(data.records.map(r => r.period));\n    \n    console.log('Existing periods:', Array.from(existingPeriods));\n    console.log('New periods:', Array.from(newPeriods));\n    \n    // Filter out any existing records for the same periods being uploaded\n    const filteredExistingData = currentAlpineData.filter(record => \n      !newPeriods.has(record.period)\n    );\n    \n    // Combine filtered existing data with new data\n    const mergedData = [...filteredExistingData, ...data.records];\n    \n    console.log('Merged data:', {\n      recordCount: mergedData.length,\n      periods: Array.from(new Set(mergedData.map(r => r.period))),\n      totalRevenue: mergedData.reduce((sum, r) => sum + r.revenue, 0)\n    });\n    \n    setCurrentAlpineData(mergedData);\n    \n    // Recalculate customer progressions based on merged data\n    const allCustomers = Array.from(new Set(mergedData.map(r => r.customerName)));\n    const updatedCustomerProgressions = new Map();\n    allCustomers.forEach(customer => {\n      const progress = analyzeCustomerProgress(mergedData, customer);\n      updatedCustomerProgressions.set(customer, progress);\n    });\n    \n    setCurrentCustomerProgressions(updatedCustomerProgressions);\n    // Don't hide upload section immediately - let user see the results\n    // setShowUploadSection(false); // Hide upload section after successful upload\n  };\n\n  const handleClearAlpineData = () => {\n    console.log('Clearing Alpine data, resetting to original state');\n    setCurrentAlpineData(alpineData);\n    setCurrentCustomerProgressions(customerProgressions);\n  };\n\n  const handleCSVDataUploaded = (data: { currentInvoices: any[]; previousInvoices: any[] }) => {\n    // Handle CSV data if needed\n    console.log('CSV data uploaded:', data);\n  };\n\n  const handleClearCSVData = () => {\n    // Clear CSV data if needed\n    console.log('CSV data cleared');\n  };\n\n  // Calculate KPIs\n  const kpis = useMemo(() => {\n    const totalRevenue = currentAlpineData.reduce((sum, record) => sum + record.revenue, 0);\n    const totalCases = currentAlpineData.reduce((sum, record) => sum + record.cases, 0);\n    \n    // Top customer by revenue\n    const customerRevenue = currentAlpineData.reduce((acc, record) => {\n      acc[record.customerName] = (acc[record.customerName] || 0) + record.revenue;\n      return acc;\n    }, {} as Record<string, number>);\n    const topCustomer = Object.entries(customerRevenue).sort(([,a], [,b]) => b - a)[0];\n\n    // Top product by revenue\n    const productRevenue = currentAlpineData.reduce((acc, record) => {\n      acc[record.productName] = (acc[record.productName] || 0) + record.revenue;\n      return acc;\n    }, {} as Record<string, number>);\n    const topProduct = Object.entries(productRevenue).sort(([,a], [,b]) => b - a)[0];\n\n    return {\n      totalRevenue,\n      totalCases,\n      topCustomer: topCustomer ? topCustomer[0] : 'N/A',\n      topProduct: topProduct ? topProduct[0] : 'N/A',\n    };\n  }, [currentAlpineData]);\n\n  // Revenue over time data (grouped by periods)\n  const revenueOverTime = useMemo(() => {\n    const periodRevenue = currentAlpineData.reduce((acc, record) => {\n      const period = record.period;\n      acc[period] = (acc[period] || 0) + record.revenue;\n      return acc;\n    }, {} as Record<string, number>);\n\n    return Object.entries(periodRevenue)\n      .sort(([a], [b]) => a.localeCompare(b))\n      .map(([period, revenue]) => ({\n        period,\n        revenue: Math.round(revenue * 100) / 100,\n      }));\n  }, [currentAlpineData]);\n\n  // Revenue by customer data\n  const revenueByCustomer = useMemo(() => {\n    const customerRevenue = currentAlpineData.reduce((acc, record) => {\n      acc[record.customerName] = (acc[record.customerName] || 0) + record.revenue;\n      return acc;\n    }, {} as Record<string, number>);\n\n    const customerIds = currentAlpineData.reduce((acc, record) => {\n      acc[record.customerName] = record.customerId || '';\n      return acc;\n    }, {} as Record<string, string>);\n\n    return Object.entries(customerRevenue)\n      .sort(([,a], [,b]) => b - a)\n      .map(([customer, revenue], index) => ({\n        id: `${customer}-${index}`,\n        customer: customer.length > 20 ? customer.substring(0, 20) + '...' : customer,\n        fullCustomerName: customer,\n        customerId: customerIds[customer] || '',\n        revenue: Math.round(revenue * 100) / 100,\n      }));\n  }, [currentAlpineData]);\n\n  // Revenue by product data\n  const revenueByProduct = useMemo(() => {\n    const productRevenue = currentAlpineData.reduce((acc, record) => {\n      acc[record.productName] = (acc[record.productName] || 0) + record.revenue;\n      return acc;\n    }, {} as Record<string, number>);\n\n    return Object.entries(productRevenue)\n      .sort(([,a], [,b]) => b - a)\n      .map(([product, revenue], index) => ({\n        id: `${product}-${index}`,\n        product: product.length > 20 ? product.substring(0, 20) + '...' : product,\n        fullProduct: product,\n        revenue: Math.round(revenue * 100) / 100,\n      }));\n  }, [currentAlpineData]);\n\n  // Product mix pie chart data\n  const productMix = useMemo(() => {\n    const total = currentAlpineData.reduce((sum, record) => sum + record.revenue, 0);\n\n    return revenueByProduct\n      .slice(0, 8) // Top 8 products\n      .map((product) => ({\n        name: product.product.length > 12 ? product.product.substring(0, 12) + '...' : product.product,\n        value: Math.round((product.revenue / total) * 100 * 100) / 100,\n      }));\n  }, [revenueByProduct, currentAlpineData]);\n\n  const colors = ['#3B82F6', '#EF4444', '#10B981', '#F59E0B', '#8B5CF6', '#F97316', '#06B6D4', '#84CC16'];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto p-6\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex justify-between items-start\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">Alpine Sales Dashboard</h1>\n              <p className=\"text-gray-600 mt-2\">Alpine distributor sales analysis (June - August 2025)</p>\n              <p className=\"text-sm text-gray-500 mt-1\">\n                {currentAlpineData.length} sales records from {new Set(currentAlpineData.map(r => r.period)).size} periods\n              </p>\n            </div>\n            <Button\n              onClick={() => setShowUploadSection(!showUploadSection)}\n              className=\"flex items-center gap-2\"\n              variant={showUploadSection ? \"default\" : \"outline\"}\n            >\n              {showUploadSection ? <BarChart3 className=\"w-4 h-4\" /> : <Upload className=\"w-4 h-4\" />}\n              {showUploadSection ? 'View Dashboard' : 'Upload Data'}\n            </Button>\n          </div>\n        </div>\n\n        {/* Upload Section */}\n        {showUploadSection && (\n          <div className=\"mb-8 space-y-6\">\n            <AlpineReportUpload\n              onDataParsed={handleAlpineDataParsed}\n              onClearData={handleClearAlpineData}\n            />\n            <CSVUpload\n              onDataUploaded={handleCSVDataUploaded}\n              onClearData={handleClearCSVData}\n            />\n          </div>\n        )}\n\n        {/* KPIs */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center\">\n                <div className=\"flex-1\">\n                  <p className=\"text-sm font-medium text-gray-600\">Total Revenue</p>\n                  <p className=\"text-2xl font-bold text-gray-900\">\n                ${kpis.totalRevenue.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n                  </p>\n                </div>\n                <div className=\"text-gray-400\">\n                  💰\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center\">\n                <div className=\"flex-1\">\n                  <p className=\"text-sm font-medium text-gray-600\">Total Cases</p>\n                  <p className=\"text-2xl font-bold text-gray-900\">\n                    {kpis.totalCases.toFixed(0)}\n                  </p>\n                </div>\n                <div className=\"text-gray-400\">\n                  📦\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center\">\n                <div className=\"flex-1\">\n                  <p className=\"text-sm font-medium text-gray-600\">Top Customer</p>\n                  <p className=\"text-lg font-bold text-gray-900 truncate\" title={kpis.topCustomer}>\n                {kpis.topCustomer}\n                  </p>\n                </div>\n                <div className=\"text-gray-400\">\n                  🏆\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center\">\n                <div className=\"flex-1\">\n                  <p className=\"text-sm font-medium text-gray-600\">Top Product</p>\n                  <p className=\"text-lg font-bold text-gray-900 truncate\" title={kpis.topProduct}>\n                {kpis.topProduct}\n                  </p>\n                </div>\n                <div className=\"text-gray-400\">\n                  🎯\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Main Charts */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n          {/* Revenue Over Time */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Revenue by Period</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"h-64\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart data={revenueOverTime}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"period\" />\n                    <YAxis />\n                  <Tooltip \n                      formatter={(value: number) => [`$${value.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`, 'Revenue']}\n                      labelFormatter={(label) => `Period: ${label}`}\n                  />\n                  <Line \n                    type=\"monotone\" \n                    dataKey=\"revenue\" \n                    stroke=\"#3B82F6\" \n                    strokeWidth={2}\n                      dot={{ fill: '#3B82F6', strokeWidth: 2, r: 4 }}\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Product Mix */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Product Mix</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"h-64\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <PieChart>\n                  <Pie\n                    data={productMix}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                      outerRadius={80}\n                    dataKey=\"value\"\n                      label={({ name, value }) => `${name}: ${value}%`}\n                  >\n                    {productMix.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\n                    ))}\n                  </Pie>\n                    <Tooltip formatter={(value: number) => [`${value}%`, 'Percentage']} />\n                </PieChart>\n              </ResponsiveContainer>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Revenue Analysis */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n          {/* Revenue by Customer */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Revenue by Customer</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <RevenueByCustomerComponent\n                revenueByCustomer={revenueByCustomer}\n                alpineData={currentAlpineData}\n                onCustomerClick={handleCustomerClick}\n                isComparisonMode={true}\n              />\n            </CardContent>\n          </Card>\n\n          {/* Revenue by Product */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Revenue by Product</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <RevenueByProductComponent\n                revenueByProduct={revenueByProduct}\n                alpineData={currentAlpineData}\n              />\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Period Comparison */}\n        <Card className=\"mb-8\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              📊 Period-to-Period Comparison\n            </CardTitle>\n            <p className=\"text-sm text-gray-600\">Compare customer performance between any two periods</p>\n          </CardHeader>\n          <CardContent>\n            <PeriodComparison alpineData={currentAlpineData} />\n          </CardContent>\n        </Card>\n\n        {/* Customer Detail Modal */}\n        {selectedCustomerForModal && (\n          <CustomerDetailModal\n            customerName={selectedCustomerForModal}\n            currentInvoices={[]} // Alpine data doesn't use invoice format\n            previousInvoices={[]}\n            isOpen={isCustomerModalOpen}\n            onClose={handleCloseCustomerModal}\n            alpineData={currentAlpineData}\n            progressAnalysis={currentCustomerProgressions.get(selectedCustomerForModal)}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}