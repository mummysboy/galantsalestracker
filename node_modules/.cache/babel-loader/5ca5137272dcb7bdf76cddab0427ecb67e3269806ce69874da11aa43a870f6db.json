{"ast":null,"code":"var _jsxFileName = \"/Users/isaachirsch/Desktop/GalantCo/SalesTracker/src/components/AlpineReportUpload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Upload, FileText, AlertCircle, CheckCircle, X, Trash2 } from 'lucide-react';\nimport { parseAlpineTXT, parseMultipleAlpineReports, analyzeCustomerProgress } from '../utils/alpineParser';\nimport { saveInvoiceToSession, removeInvoiceFromSession, getSessionData, clearSessionData } from '../utils/sessionStorage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AlpineReportUpload = ({\n  onDataParsed,\n  onClearData\n}) => {\n  _s();\n  const [reports, setReports] = useState([]);\n  const [storedInvoices, setStoredInvoices] = useState([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [errors, setErrors] = useState([]);\n\n  // Load stored invoices on component mount\n  useEffect(() => {\n    const sessionData = getSessionData();\n    setStoredInvoices(sessionData.invoices);\n\n    // If we have stored invoices, process them and notify parent\n    if (sessionData.invoices.length > 0) {\n      const allRecords = sessionData.invoices.flatMap(invoice => invoice.data.records);\n      const customerProgressions = new Map();\n\n      // Analyze customer progressions\n      const uniqueCustomers = Array.from(new Set(allRecords.map(r => r.customerName)));\n      uniqueCustomers.forEach(customer => {\n        const progress = analyzeCustomerProgress(allRecords, customer);\n        customerProgressions.set(customer, progress);\n      });\n      onDataParsed({\n        records: allRecords,\n        customerProgressions\n      });\n    }\n  }, [onDataParsed]);\n  const handleFileUpload = useCallback(async (file, period) => {\n    try {\n      const content = await file.text();\n\n      // Add to reports\n      const newReport = {\n        file,\n        period,\n        content\n      };\n      setReports(prev => [...prev, newReport]);\n    } catch (error) {\n      setErrors(prev => [...prev, `Error reading ${file.name}: ${error}`]);\n    }\n  }, []);\n  const processReports = useCallback(async () => {\n    if (reports.length === 0) return;\n    setIsProcessing(true);\n    setErrors([]);\n    try {\n      // Parse all reports\n      const parsedReports = reports.map(report => ({\n        content: report.content,\n        period: report.period\n      }));\n      const data = parseMultipleAlpineReports(parsedReports);\n\n      // Create stored invoice for each report\n      const newInvoices = reports.map((report, index) => {\n        var _report$file;\n        return {\n          id: `${Date.now()}-${index}`,\n          fileName: ((_report$file = report.file) === null || _report$file === void 0 ? void 0 : _report$file.name) || 'Unknown',\n          period: report.period,\n          uploadDate: new Date().toISOString(),\n          data: parseAlpineTXT(report.content, report.period)\n        };\n      });\n\n      // Save each invoice to session storage\n      newInvoices.forEach(invoice => {\n        saveInvoiceToSession(invoice);\n      });\n\n      // Update local state\n      setStoredInvoices(prev => [...prev, ...newInvoices]);\n\n      // Analyze customer progressions\n      const customerProgressions = new Map();\n      data.metadata.customers.forEach(customer => {\n        const progress = analyzeCustomerProgress(data.records, customer);\n        customerProgressions.set(customer, progress);\n      });\n      onDataParsed({\n        records: data.records,\n        customerProgressions\n      });\n\n      // Clear the reports after processing\n      setReports([]);\n    } catch (error) {\n      setErrors(prev => [...prev, `Processing error: ${error}`]);\n    } finally {\n      setIsProcessing(false);\n    }\n  }, [reports, onDataParsed]);\n  const removeStoredInvoice = useCallback(invoiceId => {\n    removeInvoiceFromSession(invoiceId);\n    setStoredInvoices(prev => prev.filter(invoice => invoice.id !== invoiceId));\n\n    // Re-process remaining data and notify parent\n    const sessionData = getSessionData();\n    if (sessionData.invoices.length > 0) {\n      const allRecords = sessionData.invoices.flatMap(invoice => invoice.data.records);\n      const customerProgressions = new Map();\n      const uniqueCustomers = Array.from(new Set(allRecords.map(r => r.customerName)));\n      uniqueCustomers.forEach(customer => {\n        const progress = analyzeCustomerProgress(allRecords, customer);\n        customerProgressions.set(customer, progress);\n      });\n      onDataParsed({\n        records: allRecords,\n        customerProgressions\n      });\n    } else {\n      onClearData();\n    }\n  }, [onDataParsed, onClearData]);\n  const clearAllData = () => {\n    setReports([]);\n    setStoredInvoices([]);\n    setErrors([]);\n    clearSessionData();\n    onClearData();\n  };\n  const getPeriodFromFileName = fileName => {\n    // Extract date from filename: \"Alpine 6.25 Sales Report.TXT\" -> \"2025-06\"\n    const match = fileName.match(/(\\d+)\\.(\\d+)/);\n    if (match) {\n      const [, month, year] = match;\n      return `20${year}-${month.padStart(2, '0')}`;\n    }\n\n    // Default to current date if parsing fails\n    return new Date().toISOString().substring(0, 7);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"bg-white shadow-sm\",\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      className: \"p-4\",\n      children: /*#__PURE__*/_jsxDEV(CardTitle, {\n        className: \"text-sm font-semibold flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(FileText, {\n          className: \"w-4 h-4 text-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), \"Alpine Reports\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      className: \"p-4 pt-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-2 border-dashed border-gray-300 rounded-lg p-4 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".txt\",\n            onChange: e => {\n              var _e$target$files;\n              const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n              if (file) {\n                const period = getPeriodFromFileName(file.name);\n                handleFileUpload(file, period);\n              }\n            },\n            className: \"hidden\",\n            id: \"alpine-file-upload\",\n            multiple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"alpine-file-upload\",\n            className: \"cursor-pointer\",\n            children: [/*#__PURE__*/_jsxDEV(Upload, {\n              className: \"w-6 h-6 mx-auto mb-2 text-gray-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600 mb-1\",\n              children: \"Upload Alpine TXT reports\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500\",\n              children: \"Multiple files \\u2022 Auto-detects periods\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), reports.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-sm font-medium text-gray-900\",\n            children: [\"Pending (\", reports.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [reports.map((report, index) => {\n              var _report$file2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-yellow-50 border border-yellow-200 rounded p-2 flex items-center justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(FileText, {\n                    className: \"w-3 h-3 text-yellow-600\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xs font-medium\",\n                      children: (_report$file2 = report.file) === null || _report$file2 === void 0 ? void 0 : _report$file2.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xs text-gray-500\",\n                      children: report.period\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline\",\n                  size: \"sm\",\n                  onClick: () => setReports(prev => prev.filter((_, i) => i !== index)),\n                  className: \"text-red-600 hover:text-red-700 h-6 w-6 p-0\",\n                  children: /*#__PURE__*/_jsxDEV(X, {\n                    className: \"w-3 h-3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: processReports,\n              disabled: isProcessing,\n              className: \"w-full h-8 text-xs\",\n              children: isProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"animate-spin rounded-full h-3 w-3 border-b-2 border-white\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 23\n                }, this), \"Processing...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 21\n              }, this) : `Process ${reports.length} Report${reports.length !== 1 ? 's' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-sm font-medium text-gray-900\",\n            children: [\"Stored (\", storedInvoices.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), storedInvoices.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-4 text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(FileText, {\n              className: \"w-8 h-8 mx-auto mb-2 text-gray-300\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs\",\n              children: \"No invoices stored\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2 max-h-32 overflow-y-auto\",\n            children: storedInvoices.map(invoice => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-green-50 border border-green-200 rounded p-2 flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-2 flex-1 min-w-0\",\n                children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                  className: \"w-3 h-3 text-green-600 flex-shrink-0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"min-w-0 flex-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs font-medium truncate\",\n                    children: invoice.fileName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-500\",\n                    children: [invoice.period, \" \\u2022 \", invoice.data.records.length, \" records\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline\",\n                size: \"sm\",\n                onClick: () => removeStoredInvoice(invoice.id),\n                className: \"text-red-600 hover:text-red-700 h-6 w-6 p-0 flex-shrink-0\",\n                title: \"Remove invoice\",\n                children: /*#__PURE__*/_jsxDEV(Trash2, {\n                  className: \"w-3 h-3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this)]\n            }, invoice.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-3 bg-red-50 border border-red-200 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n            className: \"w-3 h-3 text-red-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs font-medium text-red-700\",\n            children: \"Errors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-red-600 space-y-1\",\n          children: errors.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: error\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), (reports.length > 0 || storedInvoices.length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n            className: \"w-4 h-4 text-blue-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font-medium text-blue-700\",\n            children: \"Data Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-blue-600 space-y-1\",\n          children: [reports.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u2022 \", reports.length, \" Alpine report\", reports.length !== 1 ? 's' : '', \" ready for processing\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this), storedInvoices.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u2022 \", storedInvoices.length, \" invoice\", storedInvoices.length !== 1 ? 's' : '', \" stored in session\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u2022 Periods: \", Array.from(new Set(storedInvoices.map(i => i.period))).sort().join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u2022 Total records: \", storedInvoices.reduce((sum, invoice) => sum + invoice.data.records.length, 0)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2022 Data persists across browser sessions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end gap-3 mt-6 pt-4 border-t\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline\",\n          size: \"sm\",\n          onClick: clearAllData,\n          disabled: reports.length === 0 && storedInvoices.length === 0,\n          children: \"Clear All Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), (reports.length > 0 || storedInvoices.length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600 flex items-center\",\n          children: storedInvoices.length > 0 ? 'Alpine data ready for analysis ✨' : 'Ready to analyze Alpine customer trends ✨'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(AlpineReportUpload, \"1n1JhNx2pWoDf6JJRDyZDKVTDbw=\");\n_c = AlpineReportUpload;\nexport default AlpineReportUpload;\nvar _c;\n$RefreshReg$(_c, \"AlpineReportUpload\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","Card","CardContent","CardHeader","CardTitle","Button","Upload","FileText","AlertCircle","CheckCircle","X","Trash2","parseAlpineTXT","parseMultipleAlpineReports","analyzeCustomerProgress","saveInvoiceToSession","removeInvoiceFromSession","getSessionData","clearSessionData","jsxDEV","_jsxDEV","Fragment","_Fragment","AlpineReportUpload","onDataParsed","onClearData","_s","reports","setReports","storedInvoices","setStoredInvoices","isProcessing","setIsProcessing","errors","setErrors","sessionData","invoices","length","allRecords","flatMap","invoice","data","records","customerProgressions","Map","uniqueCustomers","Array","from","Set","map","r","customerName","forEach","customer","progress","set","handleFileUpload","file","period","content","text","newReport","prev","error","name","processReports","parsedReports","report","newInvoices","index","_report$file","id","Date","now","fileName","uploadDate","toISOString","metadata","customers","removeStoredInvoice","invoiceId","filter","clearAllData","getPeriodFromFileName","match","month","year","padStart","substring","className","children","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","e","_e$target$files","target","files","multiple","htmlFor","_report$file2","variant","size","onClick","_","i","disabled","title","sort","join","reduce","sum","_c","$RefreshReg$"],"sources":["/Users/isaachirsch/Desktop/GalantCo/SalesTracker/src/components/AlpineReportUpload.tsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Upload, FileText, AlertCircle, CheckCircle, X, Trash2 } from 'lucide-react';\nimport { parseAlpineTXT, parseMultipleAlpineReports, analyzeCustomerProgress, AlpineSalesRecord } from '../utils/alpineParser';\nimport { \n  saveInvoiceToSession, \n  removeInvoiceFromSession, \n  getSessionData, \n  clearSessionData,\n  StoredInvoice \n} from '../utils/sessionStorage';\n\ninterface AlpineReportUploadProps {\n  onDataParsed: (data: {\n    records: AlpineSalesRecord[];\n    customerProgressions: Map<string, any>;\n  }) => void;\n  onClearData: () => void;\n}\n\ninterface AlpineFileState {\n  file: File | null;\n  period: string; // YYYY-MM format\n  content: string;\n}\n\nconst AlpineReportUpload: React.FC<AlpineReportUploadProps> = ({ \n  onDataParsed, \n  onClearData \n}) => {\n  const [reports, setReports] = useState<AlpineFileState[]>([]);\n  const [storedInvoices, setStoredInvoices] = useState<StoredInvoice[]>([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [errors, setErrors] = useState<string[]>([]);\n\n  // Load stored invoices on component mount\n  useEffect(() => {\n    const sessionData = getSessionData();\n    setStoredInvoices(sessionData.invoices);\n    \n    // If we have stored invoices, process them and notify parent\n    if (sessionData.invoices.length > 0) {\n      const allRecords = sessionData.invoices.flatMap(invoice => invoice.data.records);\n      const customerProgressions = new Map();\n      \n      // Analyze customer progressions\n      const uniqueCustomers = Array.from(new Set(allRecords.map(r => r.customerName)));\n      uniqueCustomers.forEach(customer => {\n        const progress = analyzeCustomerProgress(allRecords, customer);\n        customerProgressions.set(customer, progress);\n      });\n      \n      onDataParsed({\n        records: allRecords,\n        customerProgressions\n      });\n    }\n  }, [onDataParsed]);\n\n  const handleFileUpload = useCallback(async (file: File, period: string) => {\n    try {\n      const content = await file.text();\n      \n      // Add to reports\n      const newReport: AlpineFileState = {\n        file,\n        period,\n        content\n      };\n\n      setReports(prev => [...prev, newReport]);\n      \n    } catch (error) {\n      setErrors(prev => [...prev, `Error reading ${file.name}: ${error}`]);\n    }\n  }, []);\n\n  const processReports = useCallback(async () => {\n    if (reports.length === 0) return;\n    \n    setIsProcessing(true);\n    setErrors([]);\n\n    try {\n      // Parse all reports\n      const parsedReports = reports.map(report => ({\n        content: report.content,\n        period: report.period\n      }));\n\n      const data = parseMultipleAlpineReports(parsedReports);\n      \n      // Create stored invoice for each report\n      const newInvoices: StoredInvoice[] = reports.map((report, index) => ({\n        id: `${Date.now()}-${index}`,\n        fileName: report.file?.name || 'Unknown',\n        period: report.period,\n        uploadDate: new Date().toISOString(),\n        data: parseAlpineTXT(report.content, report.period)\n      }));\n\n      // Save each invoice to session storage\n      newInvoices.forEach(invoice => {\n        saveInvoiceToSession(invoice);\n      });\n\n      // Update local state\n      setStoredInvoices(prev => [...prev, ...newInvoices]);\n      \n      // Analyze customer progressions\n      const customerProgressions = new Map();\n      data.metadata.customers.forEach(customer => {\n        const progress = analyzeCustomerProgress(data.records, customer);\n        customerProgressions.set(customer, progress);\n      });\n\n      onDataParsed({\n        records: data.records,\n        customerProgressions\n      });\n\n      // Clear the reports after processing\n      setReports([]);\n\n    } catch (error) {\n      setErrors(prev => [...prev, `Processing error: ${error}`]);\n    } finally {\n      setIsProcessing(false);\n    }\n  }, [reports, onDataParsed]);\n\n  const removeStoredInvoice = useCallback((invoiceId: string) => {\n    removeInvoiceFromSession(invoiceId);\n    setStoredInvoices(prev => prev.filter(invoice => invoice.id !== invoiceId));\n    \n    // Re-process remaining data and notify parent\n    const sessionData = getSessionData();\n    if (sessionData.invoices.length > 0) {\n      const allRecords = sessionData.invoices.flatMap(invoice => invoice.data.records);\n      const customerProgressions = new Map();\n      \n      const uniqueCustomers = Array.from(new Set(allRecords.map(r => r.customerName)));\n      uniqueCustomers.forEach(customer => {\n        const progress = analyzeCustomerProgress(allRecords, customer);\n        customerProgressions.set(customer, progress);\n      });\n      \n      onDataParsed({\n        records: allRecords,\n        customerProgressions\n      });\n    } else {\n      onClearData();\n    }\n  }, [onDataParsed, onClearData]);\n\n  const clearAllData = () => {\n    setReports([]);\n    setStoredInvoices([]);\n    setErrors([]);\n    clearSessionData();\n    onClearData();\n  };\n\n  const getPeriodFromFileName = (fileName: string): string => {\n    // Extract date from filename: \"Alpine 6.25 Sales Report.TXT\" -> \"2025-06\"\n    const match = fileName.match(/(\\d+)\\.(\\d+)/);\n    if (match) {\n      const [, month, year] = match;\n      return `20${year}-${month.padStart(2, '0')}`;\n    }\n    \n    // Default to current date if parsing fails\n    return new Date().toISOString().substring(0, 7);\n  };\n\n  return (\n    <Card className=\"bg-white shadow-sm\">\n      <CardHeader className=\"p-4\">\n        <CardTitle className=\"text-sm font-semibold flex items-center gap-2\">\n          <FileText className=\"w-4 h-4 text-green-500\" />\n          Alpine Reports\n        </CardTitle>\n      </CardHeader>\n\n      <CardContent className=\"p-4 pt-0\">\n        {/* File Upload */}\n        <div className=\"space-y-4\">\n          <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-4 text-center\">\n            <input\n              type=\"file\"\n              accept=\".txt\"\n              onChange={(e) => {\n                const file = e.target.files?.[0];\n                if (file) {\n                  const period = getPeriodFromFileName(file.name);\n                  handleFileUpload(file, period);\n                }\n              }}\n              className=\"hidden\"\n              id=\"alpine-file-upload\"\n              multiple\n            />\n            <label htmlFor=\"alpine-file-upload\" className=\"cursor-pointer\">\n              <Upload className=\"w-6 h-6 mx-auto mb-2 text-gray-400\" />\n              <p className=\"text-xs text-gray-600 mb-1\">Upload Alpine TXT reports</p>\n              <p className=\"text-xs text-gray-500\">Multiple files • Auto-detects periods</p>\n            </label>\n          </div>\n\n          {/* Pending Reports */}\n          {reports.length > 0 && (\n            <div className=\"space-y-2\">\n              <h4 className=\"text-sm font-medium text-gray-900\">Pending ({reports.length})</h4>\n              <div className=\"space-y-2\">\n                {reports.map((report, index) => (\n                  <div key={index} className=\"bg-yellow-50 border border-yellow-200 rounded p-2 flex items-center justify-between\">\n                    <div className=\"flex items-center gap-2\">\n                      <FileText className=\"w-3 h-3 text-yellow-600\" />\n                      <div>\n                        <div className=\"text-xs font-medium\">{report.file?.name}</div>\n                        <div className=\"text-xs text-gray-500\">{report.period}</div>\n                      </div>\n                    </div>\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => setReports(prev => prev.filter((_, i) => i !== index))}\n                      className=\"text-red-600 hover:text-red-700 h-6 w-6 p-0\"\n                    >\n                      <X className=\"w-3 h-3\" />\n                    </Button>\n                  </div>\n                ))}\n                \n                {/* Process Reports Button */}\n                <Button\n                  onClick={processReports}\n                  disabled={isProcessing}\n                  className=\"w-full h-8 text-xs\"\n                >\n                  {isProcessing ? (\n                    <div className=\"flex items-center gap-2\">\n                      <div className=\"animate-spin rounded-full h-3 w-3 border-b-2 border-white\"></div>\n                      Processing...\n                    </div>\n                  ) : (\n                    `Process ${reports.length} Report${reports.length !== 1 ? 's' : ''}`\n                  )}\n                </Button>\n              </div>\n            </div>\n          )}\n\n          {/* Stored Invoices */}\n          <div className=\"space-y-2\">\n            <h4 className=\"text-sm font-medium text-gray-900\">Stored ({storedInvoices.length})</h4>\n            \n            {storedInvoices.length === 0 ? (\n              <div className=\"text-center py-4 text-gray-500\">\n                <FileText className=\"w-8 h-8 mx-auto mb-2 text-gray-300\" />\n                <p className=\"text-xs\">No invoices stored</p>\n              </div>\n            ) : (\n              <div className=\"space-y-2 max-h-32 overflow-y-auto\">\n                {storedInvoices.map((invoice) => (\n                  <div key={invoice.id} className=\"bg-green-50 border border-green-200 rounded p-2 flex items-center justify-between\">\n                    <div className=\"flex items-center gap-2 flex-1 min-w-0\">\n                      <CheckCircle className=\"w-3 h-3 text-green-600 flex-shrink-0\" />\n                      <div className=\"min-w-0 flex-1\">\n                        <div className=\"text-xs font-medium truncate\">{invoice.fileName}</div>\n                        <div className=\"text-xs text-gray-500\">\n                          {invoice.period} • {invoice.data.records.length} records\n                        </div>\n                      </div>\n                    </div>\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => removeStoredInvoice(invoice.id)}\n                      className=\"text-red-600 hover:text-red-700 h-6 w-6 p-0 flex-shrink-0\"\n                      title=\"Remove invoice\"\n                    >\n                      <Trash2 className=\"w-3 h-3\" />\n                    </Button>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Errors */}\n        {errors.length > 0 && (\n          <div className=\"mt-4 p-3 bg-red-50 border border-red-200 rounded\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <AlertCircle className=\"w-3 h-3 text-red-600\" />\n              <span className=\"text-xs font-medium text-red-700\">Errors</span>\n            </div>\n            <div className=\"text-xs text-red-600 space-y-1\">\n              {errors.map((error, index) => (\n                <div key={index}>{error}</div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Summary */}\n        {(reports.length > 0 || storedInvoices.length > 0) && (\n          <div className=\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <CheckCircle className=\"w-4 h-4 text-blue-600\" />\n              <span className=\"text-sm font-medium text-blue-700\">Data Summary</span>\n            </div>\n            <div className=\"text-sm text-blue-600 space-y-1\">\n              {reports.length > 0 && (\n                <p>• {reports.length} Alpine report{reports.length !== 1 ? 's' : ''} ready for processing</p>\n              )}\n              {storedInvoices.length > 0 && (\n                <>\n                  <p>• {storedInvoices.length} invoice{storedInvoices.length !== 1 ? 's' : ''} stored in session</p>\n                  <p>• Periods: {Array.from(new Set(storedInvoices.map(i => i.period))).sort().join(', ')}</p>\n                  <p>• Total records: {storedInvoices.reduce((sum, invoice) => sum + invoice.data.records.length, 0)}</p>\n                </>\n              )}\n              <p>• Data persists across browser sessions</p>\n            </div>\n          </div>\n        )}\n\n        {/* Action Buttons */}\n        <div className=\"flex justify-end gap-3 mt-6 pt-4 border-t\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={clearAllData}\n            disabled={reports.length === 0 && storedInvoices.length === 0}\n          >\n            Clear All Data\n          </Button>\n          \n          {(reports.length > 0 || storedInvoices.length > 0) && (\n            <div className=\"text-sm text-gray-600 flex items-center\">\n              {storedInvoices.length > 0 ? 'Alpine data ready for analysis ✨' : 'Ready to analyze Alpine customer trends ✨'}\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default AlpineReportUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}