{"ast":null,"code":"import _objectSpread from\"/Users/isaachirsch/Desktop/GalantCo/SalesTracker/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useCallback}from'react';import{Card,CardContent,CardHeader,CardTitle}from'./ui/card';import{Button}from'./ui/button';import{Upload,FileText,AlertCircle,CheckCircle,X}from'lucide-react';import{parseInvoiceCSV,parseBiRiteCSV}from'../utils/csvParser';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CSVUpload=_ref=>{let{onDataUploaded,onClearData}=_ref;const[uploadState,setUploadState]=useState({currentFile:null,previousFile:null,currentData:null,previousData:null,errors:[],success:false});const[parsingProgress,setParsingProgress]=useState({isParsing:false,progress:0,message:''});const[columnMappings,setColumnMappings]=useState({customerColumn:'Customer',productColumn:'Product',quantityColumn:'Quantity',revenueColumn:'Revenue',dateColumn:'Date'});const[parseMode,setParseMode]=useState('custom');const handleFileUpload=useCallback(async(file,period)=>{setParsingProgress({isParsing:true,progress:0,message:\"Reading \".concat(file.name,\"...\")});try{const text=await file.text();setParsingProgress({isParsing:true,progress:50,message:'Parsing CSV data...'});let parseResult;if(parseMode==='birite'){parseResult=parseBiRiteCSV(text);}else{parseResult=parseInvoiceCSV(text,{columnMappings,delimiter:',',currencySymbol:'$'});}setParsingProgress({isParsing:true,progress:90,message:'Processing data...'});const newState=_objectSpread(_objectSpread({},uploadState),{},{[\"\".concat(period,\"File\")]:file,[\"\".concat(period,\"Data\")]:parseResult.data,errors:period==='current'?parseResult.errors:[...uploadState.errors,...parseResult.errors]});setUploadState(newState);setParsingProgress({isParsing:false,progress:100,message:\"Successfully processed \".concat(file.name)});// Check if both files are uploaded\nif(newState.currentData&&newState.previousData){onDataUploaded({currentInvoices:newState.currentData.records,previousInvoices:newState.previousData.records});setUploadState(prev=>_objectSpread(_objectSpread({},prev),{},{success:true}));}}catch(error){setUploadState(prev=>_objectSpread(_objectSpread({},prev),{},{errors:[...prev.errors,{row:0,column:'file',value:file.name,message:\"Error reading file: \".concat(error instanceof Error?error.message:'Unknown error')}]}));setParsingProgress({isParsing:false,progress:0,message:'Error processing file'});}},[uploadState,columnMappings,parseMode,onDataUploaded]);const handleFileSelect=(event,period)=>{var _event$target$files;const file=(_event$target$files=event.target.files)===null||_event$target$files===void 0?void 0:_event$target$files[0];if(file&&file.type==='text/csv'){handleFileUpload(file,period);}};const clearData=()=>{setUploadState({currentFile:null,previousFile:null,currentData:null,previousData:null,errors:[],success:false});onClearData();};const formatFileSize=bytes=>{if(bytes===0)return'0 Bytes';const k=1024;const sizes=['Bytes','KB','MB'];const i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(2))+' '+sizes[i];};const formatCurrency=amount=>{return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD'}).format(amount);};return/*#__PURE__*/_jsxs(Card,{className:\"bg-white shadow-lg\",children:[/*#__PURE__*/_jsxs(CardHeader,{className:\"p-4 sm:p-6\",children:[/*#__PURE__*/_jsxs(CardTitle,{className:\"text-base sm:text-lg font-semibold flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Upload,{className:\"w-5 h-5 text-blue-500\"}),\"Upload Invoice Data\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"text-sm font-medium text-gray-700 mb-2 block\",children:\"CSV Format:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-4\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center gap-2 text-sm\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"parseMode\",checked:parseMode==='custom',onChange:()=>setParseMode('custom'),className:\"rounded\"}),\"Custom Format\"]}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center gap-2 text-sm\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"parseMode\",checked:parseMode==='birite',onChange:()=>setParseMode('birite'),className:\"rounded\"}),\"BiRite Format (from your sample file)\"]})]})]}),parseMode==='custom'&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 p-4 bg-gray-50 rounded-lg\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"text-sm font-medium text-gray-700 mb-3 block\",children:\"Column Mappings:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-3 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-xs text-gray-600 mb-1\",children:\"Customer Column:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:columnMappings.customerColumn,onChange:e=>setColumnMappings(prev=>_objectSpread(_objectSpread({},prev),{},{customerColumn:e.target.value})),className:\"w-full px-2 py-1 border border-gray-300 rounded text-xs\",placeholder:\"e.g., Customer, Client\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-xs text-gray-600 mb-1\",children:\"Product Column:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:columnMappings.productColumn,onChange:e=>setColumnMappings(prev=>_objectSpread(_objectSpread({},prev),{},{productColumn:e.target.value})),className:\"w-full px-2 py-1 border border-gray-300 rounded text-xs\",placeholder:\"e.g., Product, Item\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-xs text-gray-600 mb-1\",children:\"Quantity Column:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:columnMappings.quantityColumn,onChange:e=>setColumnMappings(prev=>_objectSpread(_objectSpread({},prev),{},{quantityColumn:e.target.value})),className:\"w-full px-2 py-1 border border-gray-300 rounded text-xs\",placeholder:\"e.g., Quantity, Qty, Cases\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-xs text-gray-600 mb-1\",children:\"Revenue Column:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:columnMappings.revenueColumn,onChange:e=>setColumnMappings(prev=>_objectSpread(_objectSpread({},prev),{},{revenueColumn:e.target.value})),className:\"w-full px-2 py-1 border border-gray-300 rounded text-xs\",placeholder:\"e.g., Revenue, Amount, Total\"})]})]})]})]}),/*#__PURE__*/_jsxs(CardContent,{className:\"p-4 sm:p-6 pt-0\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"font-medium text-gray-900 flex items-center gap-2\",children:[/*#__PURE__*/_jsx(FileText,{className:\"w-4 h-4 text-green-500\"}),\"Current Period Data\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-gray-400 transition-colors\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".csv\",onChange:e=>handleFileSelect(e,'current'),className:\"hidden\",id:\"current-file-upload\"}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"current-file-upload\",className:\"cursor-pointer\",children:[/*#__PURE__*/_jsx(Upload,{className:\"w-8 h-8 mx-auto mb-2 text-gray-400\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-2\",children:\"Click to upload current invoice data\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500\",children:\"CSV files only\"})]})]}),uploadState.currentFile&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white border rounded-lg p-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(FileText,{className:\"w-4 h-4 text-green-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:uploadState.currentFile.name})]}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-500\",children:formatFileSize(uploadState.currentFile.size)})]}),uploadState.currentData&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 text-xs text-gray-600\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[uploadState.currentData.metadata.totalRecords,\" records\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[uploadState.currentData.metadata.uniqueCustomers,\" customers\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[uploadState.currentData.metadata.uniqueProducts,\" products\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[formatCurrency(uploadState.currentData.metadata.totalRevenue),\" total revenue\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"font-medium text-gray-900 flex items-center gap-2\",children:[/*#__PURE__*/_jsx(FileText,{className:\"w-4 h-4 text-orange-500\"}),\"Previous Period Data\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-gray-400 transition-colors\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".csv\",onChange:e=>handleFileSelect(e,'previous'),className:\"hidden\",id:\"previous-file-upload\"}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"previous-file-upload\",className:\"cursor-pointer\",children:[/*#__PURE__*/_jsx(Upload,{className:\"w-8 h-8 mx-auto mb-2 text-gray-400\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-2\",children:\"Click to upload previous invoice data\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500\",children:\"CSV files only\"})]})]}),uploadState.previousFile&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white border rounded-lg p-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(FileText,{className:\"w-4 h-4 text-orange-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:uploadState.previousFile.name})]}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-500\",children:formatFileSize(uploadState.previousFile.size)})]}),uploadState.previousData&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 text-xs text-gray-600\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[uploadState.previousData.metadata.totalRecords,\" records\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[uploadState.previousData.metadata.uniqueCustomers,\" customers\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[uploadState.previousData.metadata.uniqueProducts,\" products\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[formatCurrency(uploadState.previousData.metadata.totalRevenue),\" total revenue\"]})]})]})]})]}),parsingProgress.isParsing&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-blue-700\",children:parsingProgress.message})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-blue-200 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-600 h-2 rounded-full transition-all duration-300\",style:{width:\"\".concat(parsingProgress.progress,\"%\")}})})]}),uploadState.success&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 p-4 bg-green-50 border border-green-200 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 text-green-700\",children:[/*#__PURE__*/_jsx(CheckCircle,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:\"Data successfully uploaded!\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-green-600 mt-1\",children:\"Both current and previous period data are now loaded. You can view comparisons and alerts.\"})]}),uploadState.errors.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 p-4 bg-red-50 border border-red-200 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-2\",children:[/*#__PURE__*/_jsx(AlertCircle,{className:\"w-4 h-4 text-red-600\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-red-700\",children:\"Parse Errors\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-red-600 space-y-1 max-h-32 overflow-y-auto\",children:uploadState.errors.map((error,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start gap-2\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-red-500\",children:[\"Row \",error.row,\":\"]}),/*#__PURE__*/_jsx(\"span\",{children:error.message})]},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mt-6 pt-4 border-t\",children:[/*#__PURE__*/_jsxs(Button,{variant:\"outline\",size:\"sm\",onClick:clearData,disabled:!uploadState.currentFile&&!uploadState.previousFile,children:[/*#__PURE__*/_jsx(X,{className:\"w-4 h-4 mr-2\"}),\"Clear Data\"]}),uploadState.success&&/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Ready for analysis \\u2728\"})]})]})]});};export default CSVUpload;","map":{"version":3,"names":["React","useState","useCallback","Card","CardContent","CardHeader","CardTitle","Button","Upload","FileText","AlertCircle","CheckCircle","X","parseInvoiceCSV","parseBiRiteCSV","jsx","_jsx","jsxs","_jsxs","CSVUpload","_ref","onDataUploaded","onClearData","uploadState","setUploadState","currentFile","previousFile","currentData","previousData","errors","success","parsingProgress","setParsingProgress","isParsing","progress","message","columnMappings","setColumnMappings","customerColumn","productColumn","quantityColumn","revenueColumn","dateColumn","parseMode","setParseMode","handleFileUpload","file","period","concat","name","text","parseResult","delimiter","currencySymbol","newState","_objectSpread","data","currentInvoices","records","previousInvoices","prev","error","row","column","value","Error","handleFileSelect","event","_event$target$files","target","files","type","clearData","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatCurrency","amount","Intl","NumberFormat","style","currency","format","className","children","checked","onChange","e","placeholder","accept","id","htmlFor","size","metadata","totalRecords","uniqueCustomers","uniqueProducts","totalRevenue","width","length","map","index","variant","onClick","disabled"],"sources":["/Users/isaachirsch/Desktop/GalantCo/SalesTracker/src/components/CSVUpload.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Upload, FileText, AlertCircle, CheckCircle, X } from 'lucide-react';\nimport { parseInvoiceCSV, parseBiRiteCSV, InvoiceRecord, ParsedCSVData, CSVParseError } from '../utils/csvParser';\n\ninterface CSVUploadProps {\n  onDataUploaded: (data: { currentInvoices: InvoiceRecord[]; previousInvoices: InvoiceRecord[] }) => void;\n  onClearData: () => void;\n}\n\ninterface UploadState {\n  currentFile: File | null;\n  previousFile: File | null;\n  currentData: ParsedCSVData | null;\n  previousData: ParsedCSVData | null;\n  errors: CSVParseError[];\n  success: boolean;\n}\n\nconst CSVUpload: React.FC<CSVUploadProps> = ({ onDataUploaded, onClearData }) => {\n  const [uploadState, setUploadState] = useState<UploadState>({\n    currentFile: null,\n    previousFile: null,\n    currentData: null,\n    previousData: null,\n    errors: [],\n    success: false\n  });\n\n  const [parsingProgress, setParsingProgress] = useState<{\n    isParsing: boolean;\n    progress: number;\n    message: string;\n  }>({\n    isParsing: false,\n    progress: 0,\n    message: ''\n  });\n\n  const [columnMappings, setColumnMappings] = useState({\n    customerColumn: 'Customer',\n    productColumn: 'Product',\n    quantityColumn: 'Quantity',\n    revenueColumn: 'Revenue',\n    dateColumn: 'Date'\n  });\n\n  const [parseMode, setParseMode] = useState<'custom' | 'birite'>('custom');\n\n  const handleFileUpload = useCallback(async (\n    file: File,\n    period: 'current' | 'previous'\n  ) => {\n    setParsingProgress({\n      isParsing: true,\n      progress: 0,\n      message: `Reading ${file.name}...`\n    });\n\n    try {\n      const text = await file.text();\n      setParsingProgress({\n        isParsing: true,\n        progress: 50,\n        message: 'Parsing CSV data...'\n      });\n\n      let parseResult;\n      if (parseMode === 'birite') {\n        parseResult = parseBiRiteCSV(text);\n      } else {\n        parseResult = parseInvoiceCSV(text, {\n          columnMappings,\n          delimiter: ',',\n          currencySymbol: '$'\n        });\n      }\n\n      setParsingProgress({\n        isParsing: true,\n        progress: 90,\n        message: 'Processing data...'\n      });\n\n      const newState = {\n        ...uploadState,\n        [`${period}File`]: file,\n        [`${period}Data`]: parseResult.data,\n        errors: period === 'current' ? parseResult.errors : [...uploadState.errors, ...parseResult.errors]\n      };\n\n      setUploadState(newState);\n\n      setParsingProgress({\n        isParsing: false,\n        progress: 100,\n        message: `Successfully processed ${file.name}`\n      });\n\n      // Check if both files are uploaded\n      if (newState.currentData && newState.previousData) {\n        onDataUploaded({\n          currentInvoices: newState.currentData.records,\n          previousInvoices: newState.previousData.records\n        });\n        setUploadState(prev => ({ ...prev, success: true }));\n      }\n\n    } catch (error) {\n      setUploadState(prev => ({\n        ...prev,\n        errors: [...prev.errors, {\n          row: 0,\n          column: 'file',\n          value: file.name,\n          message: `Error reading file: ${error instanceof Error ? error.message : 'Unknown error'}`\n        }]\n      }));\n      \n      setParsingProgress({\n        isParsing: false,\n        progress: 0,\n        message: 'Error processing file'\n      });\n    }\n  }, [uploadState, columnMappings, parseMode, onDataUploaded]);\n\n  const handleFileSelect = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    period: 'current' | 'previous'\n  ) => {\n    const file = event.target.files?.[0];\n    if (file && file.type === 'text/csv') {\n      handleFileUpload(file, period);\n    }\n  };\n\n  const clearData = () => {\n    setUploadState({\n      currentFile: null,\n      previousFile: null,\n      currentData: null,\n      previousData: null,\n      errors: [],\n      success: false\n    });\n    onClearData();\n  };\n\n  const formatFileSize = (bytes: number) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount);\n  };\n\n  return (\n    <Card className=\"bg-white shadow-lg\">\n      <CardHeader className=\"p-4 sm:p-6\">\n        <CardTitle className=\"text-base sm:text-lg font-semibold flex items-center gap-2\">\n          <Upload className=\"w-5 h-5 text-blue-500\" />\n          Upload Invoice Data\n        </CardTitle>\n        \n        {/* Parse Mode Selection */}\n        <div className=\"mt-4\">\n          <label className=\"text-sm font-medium text-gray-700 mb-2 block\">CSV Format:</label>\n          <div className=\"flex gap-4\">\n            <label className=\"flex items-center gap-2 text-sm\">\n              <input\n                type=\"radio\"\n                name=\"parseMode\"\n                checked={parseMode === 'custom'}\n                onChange={() => setParseMode('custom')}\n                className=\"rounded\"\n              />\n              Custom Format\n            </label>\n            <label className=\"flex items-center gap-2 text-sm\">\n              <input\n                type=\"radio\"\n                name=\"parseMode\"\n                checked={parseMode === 'birite'}\n                onChange={() => setParseMode('birite')}\n                className=\"rounded\"\n              />\n              BiRite Format (from your sample file)\n            </label>\n          </div>\n        </div>\n\n        {/* Column Mappings for Custom Format */}\n        {parseMode === 'custom' && (\n          <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\n            <label className=\"text-sm font-medium text-gray-700 mb-3 block\">Column Mappings:</label>\n            <div className=\"grid grid-cols-2 gap-3 text-sm\">\n              <div>\n                <label className=\"block text-xs text-gray-600 mb-1\">Customer Column:</label>\n                <input\n                  type=\"text\"\n                  value={columnMappings.customerColumn}\n                  onChange={(e) => setColumnMappings(prev => ({ ...prev, customerColumn: e.target.value }))}\n                  className=\"w-full px-2 py-1 border border-gray-300 rounded text-xs\"\n                  placeholder=\"e.g., Customer, Client\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-xs text-gray-600 mb-1\">Product Column:</label>\n                <input\n                  type=\"text\"\n                  value={columnMappings.productColumn}\n                  onChange={(e) => setColumnMappings(prev => ({ ...prev, productColumn: e.target.value }))}\n                  className=\"w-full px-2 py-1 border border-gray-300 rounded text-xs\"\n                  placeholder=\"e.g., Product, Item\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-xs text-gray-600 mb-1\">Quantity Column:</label>\n                <input\n                  type=\"text\"\n                  value={columnMappings.quantityColumn}\n                  onChange={(e) => setColumnMappings(prev => ({ ...prev, quantityColumn: e.target.value }))}\n                  className=\"w-full px-2 py-1 border border-gray-300 rounded text-xs\"\n                  placeholder=\"e.g., Quantity, Qty, Cases\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-xs text-gray-600 mb-1\">Revenue Column:</label>\n                <input\n                  type=\"text\"\n                  value={columnMappings.revenueColumn}\n                  onChange={(e) => setColumnMappings(prev => ({ ...prev, revenueColumn: e.target.value }))}\n                  className=\"w-full px-2 py-1 border border-gray-300 rounded text-xs\"\n                  placeholder=\"e.g., Revenue, Amount, Total\"\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </CardHeader>\n\n      <CardContent className=\"p-4 sm:p-6 pt-0\">\n        {/* File Upload Sections */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Current Period Upload */}\n          <div className=\"space-y-4\">\n            <h3 className=\"font-medium text-gray-900 flex items-center gap-2\">\n              <FileText className=\"w-4 h-4 text-green-500\" />\n              Current Period Data\n            </h3>\n            \n            <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-gray-400 transition-colors\">\n              <input\n                type=\"file\"\n                accept=\".csv\"\n                onChange={(e) => handleFileSelect(e, 'current')}\n                className=\"hidden\"\n                id=\"current-file-upload\"\n              />\n              <label htmlFor=\"current-file-upload\" className=\"cursor-pointer\">\n                <Upload className=\"w-8 h-8 mx-auto mb-2 text-gray-400\" />\n                <p className=\"text-sm text-gray-600 mb-2\">Click to upload current invoice data</p>\n                <p className=\"text-xs text-gray-500\">CSV files only</p>\n              </label>\n            </div>\n\n            {uploadState.currentFile && (\n              <div className=\"bg-white border rounded-lg p-3\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <FileText className=\"w-4 h-4 text-green-500\" />\n                    <span className=\"text-sm font-medium\">{uploadState.currentFile.name}</span>\n                  </div>\n                  <span className=\"text-xs text-gray-500\">{formatFileSize(uploadState.currentFile.size)}</span>\n                </div>\n                \n                {uploadState.currentData && (\n                  <div className=\"mt-2 text-xs text-gray-600\">\n                    <p>{uploadState.currentData.metadata.totalRecords} records</p>\n                    <p>{uploadState.currentData.metadata.uniqueCustomers} customers</p>\n                    <p>{uploadState.currentData.metadata.uniqueProducts} products</p>\n                    <p>{formatCurrency(uploadState.currentData.metadata.totalRevenue)} total revenue</p>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* Previous Period Upload */}\n          <div className=\"space-y-4\">\n            <h3 className=\"font-medium text-gray-900 flex items-center gap-2\">\n              <FileText className=\"w-4 h-4 text-orange-500\" />\n              Previous Period Data\n            </h3>\n            \n            <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-gray-400 transition-colors\">\n              <input\n                type=\"file\"\n                accept=\".csv\"\n                onChange={(e) => handleFileSelect(e, 'previous')}\n                className=\"hidden\"\n                id=\"previous-file-upload\"\n              />\n              <label htmlFor=\"previous-file-upload\" className=\"cursor-pointer\">\n                <Upload className=\"w-8 h-8 mx-auto mb-2 text-gray-400\" />\n                <p className=\"text-sm text-gray-600 mb-2\">Click to upload previous invoice data</p>\n                <p className=\"text-xs text-gray-500\">CSV files only</p>\n              </label>\n            </div>\n\n            {uploadState.previousFile && (\n              <div className=\"bg-white border rounded-lg p-3\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <FileText className=\"w-4 h-4 text-orange-500\" />\n                    <span className=\"text-sm font-medium\">{uploadState.previousFile.name}</span>\n                  </div>\n                  <span className=\"text-xs text-gray-500\">{formatFileSize(uploadState.previousFile.size)}</span>\n                </div>\n                \n                {uploadState.previousData && (\n                  <div className=\"mt-2 text-xs text-gray-600\">\n                    <p>{uploadState.previousData.metadata.totalRecords} records</p>\n                    <p>{uploadState.previousData.metadata.uniqueCustomers} customers</p>\n                    <p>{uploadState.previousData.metadata.uniqueProducts} products</p>\n                    <p>{formatCurrency(uploadState.previousData.metadata.totalRevenue)} total revenue</p>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Parsing Progress */}\n        {parsingProgress.isParsing && (\n          <div className=\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\n              <span className=\"text-sm text-blue-700\">{parsingProgress.message}</span>\n            </div>\n            <div className=\"w-full bg-blue-200 rounded-full h-2\">\n              <div \n                className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                style={{ width: `${parsingProgress.progress}%` }}\n              ></div>\n            </div>\n          </div>\n        )}\n\n        {/* Success Message */}\n        {uploadState.success && (\n          <div className=\"mt-6 p-4 bg-green-50 border border-green-200 rounded-lg\">\n            <div className=\"flex items-center gap-2 text-green-700\">\n              <CheckCircle className=\"w-4 h-4\" />\n              <span className=\"text-sm font-medium\">Data successfully uploaded!</span>\n            </div>\n            <p className=\"text-xs text-green-600 mt-1\">\n              Both current and previous period data are now loaded. You can view comparisons and alerts.\n            </p>\n          </div>\n        )}\n\n        {/* Error Display */}\n        {uploadState.errors.length > 0 && (\n          <div className=\"mt-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <AlertCircle className=\"w-4 h-4 text-red-600\" />\n              <span className=\"text-sm font-medium text-red-700\">Parse Errors</span>\n            </div>\n            <div className=\"text-xs text-red-600 space-y-1 max-h-32 overflow-y-auto\">\n              {uploadState.errors.map((error, index) => (\n                <div key={index} className=\"flex items-start gap-2\">\n                  <span className=\"text-red-500\">Row {error.row}:</span>\n                  <span>{error.message}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Action Buttons */}\n        <div className=\"flex justify-between items-center mt-6 pt-4 border-t\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={clearData}\n            disabled={!uploadState.currentFile && !uploadState.previousFile}\n          >\n            <X className=\"w-4 h-4 mr-2\" />\n            Clear Data\n          </Button>\n          \n          {uploadState.success && (\n            <div className=\"text-sm text-gray-600\">\n              Ready for analysis ✨\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default CSVUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}