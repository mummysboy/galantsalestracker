{"ast":null,"code":"import React,{useState,useMemo}from'react';import{Card,CardContent,CardHeader,CardTitle}from'./ui/card';import{TrendingUp,TrendingDown,Minus,Package,Users}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PeriodComparison=_ref=>{let{alpineData}=_ref;const[selectedPeriods,setSelectedPeriods]=useState(['2025-06','2025-08']);// Compare June vs August by default\nconst[sortBy,setSortBy]=useState('change');const availablePeriods=useMemo(()=>{return Array.from(new Set(alpineData.map(record=>record.period))).sort();},[alpineData]);// Define helper function inside the component\nconst groupProductsByRevenue=records=>{const grouped=records.reduce((acc,record)=>{acc[record.productName]=(acc[record.productName]||0)+record.revenue;return acc;},{});return Object.entries(grouped).sort((_ref2,_ref3)=>{let[,a]=_ref2;let[,b]=_ref3;return b-a;}).slice(0,3).map(_ref4=>{var _records$find;let[productName,revenue]=_ref4;return{productName,revenue,cases:((_records$find=records.find(r=>r.productName===productName))===null||_records$find===void 0?void 0:_records$find.cases)||0};});};const comparisons=useMemo(()=>{const customerGroups=alpineData.reduce((acc,record)=>{if(!acc[record.customerName]){acc[record.customerName]={};}if(!acc[record.customerName][record.period]){acc[record.customerName][record.period]=[];}acc[record.customerName][record.period].push(record);return acc;},{});const comparisons=[];Object.entries(customerGroups).forEach(_ref5=>{let[customerName,periods]=_ref5;const availableForCustomer=Object.keys(periods).sort();const firstPeriod=selectedPeriods[0];const secondPeriod=selectedPeriods[1];// Only include customers that have data in both selected periods\nif(availableForCustomer.includes(firstPeriod)&&availableForCustomer.includes(secondPeriod)){const firstPeriodData=periods[firstPeriod]||[];const secondPeriodData=periods[secondPeriod]||[];const firstPeriodSummary={period:firstPeriod,revenue:firstPeriodData.reduce((sum,r)=>sum+r.revenue,0),cases:firstPeriodData.reduce((sum,r)=>sum+r.cases,0),productCount:firstPeriodData.length,topProducts:groupProductsByRevenue(firstPeriodData)};const secondPeriodSummary={period:secondPeriod,revenue:secondPeriodData.reduce((sum,r)=>sum+r.revenue,0),cases:secondPeriodData.reduce((sum,r)=>sum+r.cases,0),productCount:secondPeriodData.length,topProducts:groupProductsByRevenue(secondPeriodData)};const revenueChange=secondPeriodSummary.revenue-firstPeriodSummary.revenue;const revenuePercentChange=firstPeriodSummary.revenue>0?revenueChange/firstPeriodSummary.revenue*100:secondPeriodSummary.revenue>0?100:0;const caseChange=secondPeriodSummary.cases-firstPeriodSummary.cases;const casePercentChange=firstPeriodSummary.cases>0?caseChange/firstPeriodSummary.cases*100:secondPeriodSummary.cases>0?100:0;let latestTrend;if(firstPeriodSummary.revenue===0&&secondPeriodSummary.revenue>0){latestTrend='new';}else if(firstPeriodSummary.revenue>0&&secondPeriodSummary.revenue===0){latestTrend='lost';}else if(Math.abs(revenuePercentChange)<5){latestTrend='stable';}else if(revenueChange>0){latestTrend='increasing';}else{latestTrend='decreasing';}comparisons.push({customerName,periods:[firstPeriodSummary,secondPeriodSummary],latestTrend,changeFromPrevious:{revenueChange,revenuePercentChange,caseChange,casePercentChange}});}});// Sort comparisons\ncomparisons.sort((a,b)=>{switch(sortBy){case'revenue':return Math.abs(b.changeFromPrevious.revenueChange)-Math.abs(a.changeFromPrevious.revenueChange);case'cases':return Math.abs(b.changeFromPrevious.caseChange)-Math.abs(a.changeFromPrevious.caseChange);case'change':default:return Math.abs(b.changeFromPrevious.revenuePercentChange)-Math.abs(a.changeFromPrevious.revenuePercentChange);}});return comparisons;},[alpineData,selectedPeriods,sortBy]);const formatCurrency=amount=>{return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD',minimumFractionDigits:0}).format(amount);};const formatDate=period=>{const[year,month]=period.split('-');const monthNames=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];return\"\".concat(monthNames[parseInt(month)-1],\" \").concat(year);};const getTrendIcon=trend=>{switch(trend){case'increasing':return/*#__PURE__*/_jsx(TrendingUp,{className:\"w-4 h-4 text-green-600\"});case'decreasing':return/*#__PURE__*/_jsx(TrendingDown,{className:\"w-4 h-4 text-red-600\"});case'new':return/*#__PURE__*/_jsx(\"div\",{className:\"w-4 h-4 border-2 border-blue-500 rounded-full bg-blue-100\"});case'lost':return/*#__PURE__*/_jsx(\"div\",{className:\"w-4 h-4 bg-gray-400 rounded-full\"});default:return/*#__PURE__*/_jsx(Minus,{className:\"w-4 h-4 text-gray-600\"});}};const getTrendColor=trend=>{switch(trend){case'increasing':return'text-green-600 bg-green-100';case'decreasing':return'text-red-600 bg-red-100';case'new':return'text-blue-600 bg-blue-100';case'lost':return'text-gray-600 bg-gray-100';default:return'text-gray-600 bg-gray-100';}};return/*#__PURE__*/_jsxs(\"div\",{className:\"space-cols-4\",children:[/*#__PURE__*/_jsxs(Card,{className:\"mb-6\",children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{className:\"flex items-center gap-2\",children:\"\\uD83D\\uDCCA Period Comparison Tool\"})}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col sm:flex-row gap-4 items-start sm:items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:\"Compare:\"}),/*#__PURE__*/_jsx(\"select\",{value:selectedPeriods[0],onChange:e=>setSelectedPeriods([e.target.value,selectedPeriods[1]]),className:\"border border-gray-300 rounded px-3 py-1 text-sm\",children:availablePeriods.map(period=>/*#__PURE__*/_jsx(\"option\",{value:period,children:formatDate(period)},period))}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:\"vs\"}),/*#__PURE__*/_jsx(\"select\",{value:selectedPeriods[1],onChange:e=>setSelectedPeriods([selectedPeriods[0],e.target.value]),className:\"border border-gray-300 rounded px-3 py-1 text-sm\",children:availablePeriods.map(period=>/*#__PURE__*/_jsx(\"option\",{value:period,children:formatDate(period)},period))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:\"Sort by:\"}),/*#__PURE__*/_jsxs(\"select\",{value:sortBy,onChange:e=>setSortBy(e.target.value),className:\"border border-gray-300 rounded px-3 py-1 text-sm\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"change\",children:\"Biggest % Change\"}),/*#__PURE__*/_jsx(\"option\",{value:\"revenue\",children:\"Revenue Impact\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cases\",children:\"Volume Change\"})]})]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\",children:[/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{className:\"p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Users,{className:\"w-5 h-5 text-blue-500\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Customers Analyzed\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-lg font-bold\",children:comparisons.length})]})]})})}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{className:\"p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(TrendingUp,{className:\"w-5 h-5 text-green-500\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Growing Customers\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-lg font-bold text-green-600\",children:comparisons.filter(c=>c.latestTrend==='increasing').length})]})]})})}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{className:\"p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(TrendingDown,{className:\"w-5 h-5 text-red-500\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Declining Customers\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-lg font-bold text-red-600\",children:comparisons.filter(c=>c.latestTrend==='decreasing').length})]})]})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:comparisons.map(comparison=>{const firstPeriod=comparison.periods[0];const secondPeriod=comparison.periods[1];return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[getTrendIcon(comparison.latestTrend),/*#__PURE__*/_jsx(CardTitle,{className:\"text-lg\",children:comparison.customerName})]}),/*#__PURE__*/_jsx(\"div\",{className:\"px-2 py-1 rounded-full text-xs font-medium \".concat(getTrendColor(comparison.latestTrend)),children:comparison.latestTrend.toUpperCase()})]})}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium mb-3\",children:\"Period Comparison\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center p-3 bg-gray-50 rounded\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:formatDate(firstPeriod.period)}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-semibold\",children:formatCurrency(firstPeriod.revenue)}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500\",children:[firstPeriod.cases,\" cases\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center p-3 bg-blue-50 rounded border border-blue-200\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-blue-800\",children:formatDate(secondPeriod.period)}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-semibold text-blue-800\",children:formatCurrency(secondPeriod.revenue)}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-blue-600\",children:[secondPeriod.cases,\" cases\"]})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium mb-3\",children:\"Changes\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center p-2 bg-gray-50 rounded\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:\"Revenue Change:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"font-semibold \".concat(comparison.changeFromPrevious.revenueChange>=0?'text-green-600':'text-red-600'),children:[comparison.changeFromPrevious.revenueChange>=0?'+':'',formatCurrency(comparison.changeFromPrevious.revenueChange),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs ml-1\",children:[\"(\",comparison.changeFromPrevious.revenuePercentChange>=0?'+':'',comparison.changeFromPrevious.revenuePercentChange.toFixed(1),\"%)\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center p-2 bg-gray-50 rounded\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:\"Volume Change:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"font-semibold \".concat(comparison.changeFromPrevious.caseChange>=0?'text-green-600':'text-red-600'),children:[comparison.changeFromPrevious.caseChange>=0?'+':'',comparison.changeFromPrevious.caseChange,\" cases\",/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs ml-1\",children:[\"(\",comparison.changeFromPrevious.casePercentChange>=0?'+':'',comparison.changeFromPrevious.casePercentChange.toFixed(1),\"%)\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center p-2 bg-gray-50 rounded\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm\",children:\"Product Range:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"font-semibold\",children:[secondPeriod.productCount,\" products\",secondPeriod.productCount!==firstPeriod.productCount&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs ml-1 \".concat(secondPeriod.productCount>firstPeriod.productCount?'text-green-600':'text-red-600'),children:[\"(\",secondPeriod.productCount>firstPeriod.productCount?'+':'',secondPeriod.productCount-firstPeriod.productCount,\")\"]})]})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium mb-2\",children:\"Top Products\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-gray-600 mb-2\",children:formatDate(firstPeriod.period)}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-1\",children:firstPeriod.topProducts.map((product,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-sm\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"truncate\",children:product.productName}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(product.revenue)})]},index))})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-gray-600 mb-2\",children:formatDate(secondPeriod.period)}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-1\",children:secondPeriod.topProducts.map((product,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-sm\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"truncate\",children:product.productName}),/*#__PURE__*/_jsx(\"span\",{children:formatCurrency(product.revenue)})]},index))})]})]})]})]})]},comparison.customerName);})}),comparisons.length===0&&/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{className:\"p-8 text-center text-gray-500\",children:[/*#__PURE__*/_jsx(Package,{className:\"w-12 h-12 mx-auto mb-4 text-gray-300\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-lg font-medium\",children:\"No matching data found\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:\"Try selecting different periods for comparison\"})]})})]});};export default PeriodComparison;","map":{"version":3,"names":["React","useState","useMemo","Card","CardContent","CardHeader","CardTitle","TrendingUp","TrendingDown","Minus","Package","Users","jsx","_jsx","jsxs","_jsxs","PeriodComparison","_ref","alpineData","selectedPeriods","setSelectedPeriods","sortBy","setSortBy","availablePeriods","Array","from","Set","map","record","period","sort","groupProductsByRevenue","records","grouped","reduce","acc","productName","revenue","Object","entries","_ref2","_ref3","a","b","slice","_ref4","_records$find","cases","find","r","comparisons","customerGroups","customerName","push","forEach","_ref5","periods","availableForCustomer","keys","firstPeriod","secondPeriod","includes","firstPeriodData","secondPeriodData","firstPeriodSummary","sum","productCount","length","topProducts","secondPeriodSummary","revenueChange","revenuePercentChange","caseChange","casePercentChange","latestTrend","Math","abs","changeFromPrevious","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","format","formatDate","year","month","split","monthNames","concat","parseInt","getTrendIcon","trend","className","getTrendColor","children","value","onChange","e","target","filter","c","comparison","toUpperCase","toFixed","product","index"],"sources":["/Users/isaachirsch/Desktop/GalantCo/SalesTracker/src/components/PeriodComparison.tsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { TrendingUp, TrendingDown, Minus, Package, DollarSign, Users } from 'lucide-react';\nimport { AlpineSalesRecord } from '../utils/alpineParser';\n\ninterface PeriodComparisonProps {\n  alpineData: AlpineSalesRecord[];\n}\n\ninterface CustomerComparison {\n  customerName: string;\n  periods: {\n    period: string;\n    revenue: number;\n    cases: number;\n    productCount: number;\n    topProducts: Array<{ productName: string; revenue: number; cases: number }>;\n  }[];\n  latestTrend: 'increasing' | 'decreasing' | 'stable' | 'new' | 'lost';\n  changeFromPrevious: {\n    revenueChange: number;\n    revenuePercentChange: number;\n    caseChange: number;\n    casePercentChange: number;\n  };\n}\n\nconst PeriodComparison: React.FC<PeriodComparisonProps> = ({ alpineData }) => {\n  const [selectedPeriods, setSelectedPeriods] = useState(['2025-06', '2025-08']); // Compare June vs August by default\n  const [sortBy, setSortBy] = useState<'revenue' | 'cases' | 'change'>('change');\n\n  const availablePeriods = useMemo(() => {\n    return Array.from(new Set(alpineData.map(record => record.period))).sort();\n  }, [alpineData]);\n\n  // Define helper function inside the component\n  const groupProductsByRevenue = (records: AlpineSalesRecord[]) => {\n    const grouped = records.reduce((acc, record) => {\n      acc[record.productName] = (acc[record.productName] || 0) + record.revenue;\n      return acc;\n    }, {} as Record<string, number>);\n\n    return Object.entries(grouped)\n      .sort(([,a], [,b]) => b - a)\n      .slice(0, 3)\n      .map(([productName, revenue]) => ({\n        productName,\n        revenue,\n        cases: records.find(r => r.productName === productName)?.cases || 0\n      }));\n  };\n\n  const comparisons = useMemo(() => {\n    const customerGroups = alpineData.reduce((acc, record) => {\n      if (!acc[record.customerName]) {\n        acc[record.customerName] = {};\n      }\n      if (!acc[record.customerName][record.period]) {\n        acc[record.customerName][record.period] = [];\n      }\n      acc[record.customerName][record.period].push(record);\n      return acc;\n    }, {} as Record<string, Record<string, AlpineSalesRecord[]>>);\n\n    const comparisons: CustomerComparison[] = [];\n\n    Object.entries(customerGroups).forEach(([customerName, periods]) => {\n      const availableForCustomer = Object.keys(periods).sort();\n      const firstPeriod = selectedPeriods[0];\n      const secondPeriod = selectedPeriods[1];\n\n      // Only include customers that have data in both selected periods\n      if (availableForCustomer.includes(firstPeriod) && availableForCustomer.includes(secondPeriod)) {\n        const firstPeriodData = periods[firstPeriod] || [];\n        const secondPeriodData = periods[secondPeriod] || [];\n\n        const firstPeriodSummary = {\n          period: firstPeriod,\n          revenue: firstPeriodData.reduce((sum, r) => sum + r.revenue, 0),\n          cases: firstPeriodData.reduce((sum, r) => sum + r.cases, 0),\n          productCount: firstPeriodData.length,\n          topProducts: groupProductsByRevenue(firstPeriodData)\n        };\n\n        const secondPeriodSummary = {\n          period: secondPeriod,\n          revenue: secondPeriodData.reduce((sum, r) => sum + r.revenue, 0),\n          cases: secondPeriodData.reduce((sum, r) => sum + r.cases, 0),\n          productCount: secondPeriodData.length,\n          topProducts: groupProductsByRevenue(secondPeriodData)\n        };\n\n        const revenueChange = secondPeriodSummary.revenue - firstPeriodSummary.revenue;\n        const revenuePercentChange = firstPeriodSummary.revenue > 0 \n          ? (revenueChange / firstPeriodSummary.revenue) * 100 \n          : secondPeriodSummary.revenue > 0 ? 100 : 0;\n\n        const caseChange = secondPeriodSummary.cases - firstPeriodSummary.cases;\n        const casePercentChange = firstPeriodSummary.cases > 0 \n          ? (caseChange / firstPeriodSummary.cases) * 100 \n          : secondPeriodSummary.cases > 0 ? 100 : 0;\n\n        let latestTrend: 'increasing' | 'decreasing' | 'stable' | 'new' | 'lost';\n        if (firstPeriodSummary.revenue === 0 && secondPeriodSummary.revenue > 0) {\n          latestTrend = 'new';\n        } else if (firstPeriodSummary.revenue > 0 && secondPeriodSummary.revenue === 0) {\n          latestTrend = 'lost';\n        } else if (Math.abs(revenuePercentChange) < 5) {\n          latestTrend = 'stable';\n        } else if (revenueChange > 0) {\n          latestTrend = 'increasing';\n        } else {\n          latestTrend = 'decreasing';\n        }\n\n        comparisons.push({\n          customerName,\n          periods: [firstPeriodSummary, secondPeriodSummary],\n          latestTrend,\n          changeFromPrevious: {\n            revenueChange,\n            revenuePercentChange,\n            caseChange,\n            casePercentChange\n          }\n        });\n      }\n    });\n\n    // Sort comparisons\n    comparisons.sort((a, b) => {\n      switch (sortBy) {\n        case 'revenue':\n          return Math.abs(b.changeFromPrevious.revenueChange) - Math.abs(a.changeFromPrevious.revenueChange);\n        case 'cases':\n          return Math.abs(b.changeFromPrevious.caseChange) - Math.abs(a.changeFromPrevious.caseChange);\n        case 'change':\n        default:\n          return Math.abs(b.changeFromPrevious.revenuePercentChange) - Math.abs(a.changeFromPrevious.revenuePercentChange);\n      }\n    });\n\n    return comparisons;\n  }, [alpineData, selectedPeriods, sortBy]);\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0\n    }).format(amount);\n  };\n\n  const formatDate = (period: string) => {\n    const [year, month] = period.split('-');\n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    return `${monthNames[parseInt(month) - 1]} ${year}`;\n  };\n\n  const getTrendIcon = (trend: string) => {\n    switch (trend) {\n      case 'increasing':\n        return <TrendingUp className=\"w-4 h-4 text-green-600\" />;\n      case 'decreasing':\n        return <TrendingDown className=\"w-4 h-4 text-red-600\" />;\n      case 'new':\n        return <div className=\"w-4 h-4 border-2 border-blue-500 rounded-full bg-blue-100\" />;\n      case 'lost':\n        return <div className=\"w-4 h-4 bg-gray-400 rounded-full\" />;\n      default:\n        return <Minus className=\"w-4 h-4 text-gray-600\" />;\n    }\n  };\n\n  const getTrendColor = (trend: string) => {\n    switch (trend) {\n      case 'increasing':\n        return 'text-green-600 bg-green-100';\n      case 'decreasing':\n        return 'text-red-600 bg-red-100';\n      case 'new':\n        return 'text-blue-600 bg-blue-100';\n      case 'lost':\n        return 'text-gray-600 bg-gray-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  return (\n    <div className=\"space-cols-4\">\n      {/* Period Selector */}\n      <Card className=\"mb-6\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            📊 Period Comparison Tool\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex flex-col sm:flex-row gap-4 items-start sm:items-center\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm font-medium\">Compare:</span>\n              <select \n                value={selectedPeriods[0]}\n                onChange={(e) => setSelectedPeriods([e.target.value, selectedPeriods[1]])}\n                className=\"border border-gray-300 rounded px-3 py-1 text-sm\"\n              >\n                {availablePeriods.map(period => (\n                  <option key={period} value={period}>\n                    {formatDate(period)}\n                  </option>\n                ))}\n              </select>\n              <span className=\"text-sm\">vs</span>\n              <select \n                value={selectedPeriods[1]}\n                onChange={(e) => setSelectedPeriods([selectedPeriods[0], e.target.value])}\n                className=\"border border-gray-300 rounded px-3 py-1 text-sm\"\n              >\n                {availablePeriods.map(period => (\n                  <option key={period} value={period}>\n                    {formatDate(period)}\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm font-medium\">Sort by:</span>\n              <select \n                value={sortBy}\n                onChange={(e) => setSortBy(e.target.value as 'revenue' | 'cases' | 'change')}\n                className=\"border border-gray-300 rounded px-3 py-1 text-sm\"\n              >\n                <option value=\"change\">Biggest % Change</option>\n                <option value=\"revenue\">Revenue Impact</option>\n                <option value=\"cases\">Volume Change</option>\n              </select>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Summary Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center gap-2\">\n              <Users className=\"w-5 h-5 text-blue-500\" />\n              <div>\n                <div className=\"text-sm text-gray-600\">Customers Analyzed</div>\n                <div className=\"text-lg font-bold\">{comparisons.length}</div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center gap-2\">\n              <TrendingUp className=\"w-5 h-5 text-green-500\" />\n              <div>\n                <div className=\"text-sm text-gray-600\">Growing Customers</div>\n                <div className=\"text-lg font-bold text-green-600\">\n                  {comparisons.filter(c => c.latestTrend === 'increasing').length}\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center gap-2\">\n              <TrendingDown className=\"w-5 h-5 text-red-500\" />\n              <div>\n                <div className=\"text-sm text-gray-600\">Declining Customers</div>\n                <div className=\"text-lg font-bold text-red-600\">\n                  {comparisons.filter(c => c.latestTrend === 'decreasing').length}\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Customer Comparisons */}\n      <div className=\"space-y-4\">\n        {comparisons.map((comparison) => {\n          const firstPeriod = comparison.periods[0];\n          const secondPeriod = comparison.periods[1];\n          \n          return (\n            <Card key={comparison.customerName}>\n              <CardHeader>\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    {getTrendIcon(comparison.latestTrend)}\n                    <CardTitle className=\"text-lg\">{comparison.customerName}</CardTitle>\n                  </div>\n                  <div className={`px-2 py-1 rounded-full text-xs font-medium ${getTrendColor(comparison.latestTrend)}`}>\n                    {comparison.latestTrend.toUpperCase()}\n                  </div>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                  {/* Period Comparison */}\n                  <div>\n                    <h4 className=\"font-medium mb-3\">Period Comparison</h4>\n                    <div className=\"space-y-3\">\n                      <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded\">\n                        <span className=\"text-sm font-medium\">{formatDate(firstPeriod.period)}</span>\n                        <div className=\"text-right\">\n                          <div className=\"font-semibold\">{formatCurrency(firstPeriod.revenue)}</div>\n                          <div className=\"text-xs text-gray-500\">{firstPeriod.cases} cases</div>\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex justify-between items-center p-3 bg-blue-50 rounded border border-blue-200\">\n                        <span className=\"text-sm font-medium text-blue-800\">{formatDate(secondPeriod.period)}</span>\n                        <div className=\"text-right\">\n                          <div className=\"font-semibold text-blue-800\">{formatCurrency(secondPeriod.revenue)}</div>\n                          <div className=\"text-xs text-blue-600\">{secondPeriod.cases} cases</div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Changes */}\n                  <div>\n                    <h4 className=\"font-medium mb-3\">Changes</h4>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between items-center p-2 bg-gray-50 rounded\">\n                        <span className=\"text-sm\">Revenue Change:</span>\n                        <div className={`font-semibold ${comparison.changeFromPrevious.revenueChange >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                          {comparison.changeFromPrevious.revenueChange >= 0 ? '+' : ''}{formatCurrency(comparison.changeFromPrevious.revenueChange)}\n                          <span className=\"text-xs ml-1\">\n                            ({comparison.changeFromPrevious.revenuePercentChange >= 0 ? '+' : ''}{comparison.changeFromPrevious.revenuePercentChange.toFixed(1)}%)\n                          </span>\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex justify-between items-center p-2 bg-gray-50 rounded\">\n                        <span className=\"text-sm\">Volume Change:</span>\n                        <div className={`font-semibold ${comparison.changeFromPrevious.caseChange >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                          {comparison.changeFromPrevious.caseChange >= 0 ? '+' : ''}{comparison.changeFromPrevious.caseChange} cases\n                          <span className=\"text-xs ml-1\">\n                            ({comparison.changeFromPrevious.casePercentChange >= 0 ? '+' : ''}{comparison.changeFromPrevious.casePercentChange.toFixed(1)}%)\n                          </span>\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex justify-between items-center p-2 bg-gray-50 rounded\">\n                        <span className=\"text-sm\">Product Range:</span>\n                        <div className=\"font-semibold\">\n                          {secondPeriod.productCount} products\n                          {secondPeriod.productCount !== firstPeriod.productCount && (\n                            <span className={`text-xs ml-1 ${secondPeriod.productCount > firstPeriod.productCount ? 'text-green-600' : 'text-red-600'}`}>\n                              ({secondPeriod.productCount > firstPeriod.productCount ? '+' : ''}{secondPeriod.productCount - firstPeriod.productCount})\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Top Products Comparison */}\n                <div className=\"mt-4\">\n                  <h5 className=\"font-medium mb-2\">Top Products</h5>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <div className=\"text-sm font-medium text-gray-600 mb-2\">{formatDate(firstPeriod.period)}</div>\n                      <div className=\"space-y-1\">\n                        {firstPeriod.topProducts.map((product, index) => (\n                          <div key={index} className=\"flex justify-between text-sm\">\n                            <span className=\"truncate\">{product.productName}</span>\n                            <span>{formatCurrency(product.revenue)}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"text-sm font-medium text-gray-600 mb-2\">{formatDate(secondPeriod.period)}</div>\n                      <div className=\"space-y-1\">\n                        {secondPeriod.topProducts.map((product, index) => (\n                          <div key={index} className=\"flex justify-between text-sm\">\n                            <span className=\"truncate\">{product.productName}</span>\n                            <span>{formatCurrency(product.revenue)}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n\n      {comparisons.length === 0 && (\n        <Card>\n          <CardContent className=\"p-8 text-center text-gray-500\">\n            <Package className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n            <p className=\"text-lg font-medium\">No matching data found</p>\n            <p className=\"text-sm\">Try selecting different periods for comparison</p>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nexport default PeriodComparison;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}