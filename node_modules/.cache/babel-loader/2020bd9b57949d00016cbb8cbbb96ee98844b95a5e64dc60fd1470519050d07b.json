{"ast":null,"code":"var _jsxFileName = \"/Users/isaachirsch/Desktop/GalantCo/SalesTracker/src/components/CSVUpload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Upload, FileText, AlertCircle, CheckCircle, X } from 'lucide-react';\nimport { parseInvoiceCSV, parseBiRiteCSV } from '../utils/csvParser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CSVUpload = ({\n  onDataUploaded,\n  onClearData\n}) => {\n  _s();\n  const [uploadState, setUploadState] = useState({\n    currentFile: null,\n    previousFile: null,\n    currentData: null,\n    previousData: null,\n    errors: [],\n    success: false\n  });\n  const [parsingProgress, setParsingProgress] = useState({\n    isParsing: false,\n    progress: 0,\n    message: ''\n  });\n  const [columnMappings, setColumnMappings] = useState({\n    customerColumn: 'Customer',\n    productColumn: 'Product',\n    quantityColumn: 'Quantity',\n    revenueColumn: 'Revenue',\n    dateColumn: 'Date'\n  });\n  const [parseMode, setParseMode] = useState('custom');\n  const handleFileUpload = useCallback(async (file, period) => {\n    setParsingProgress({\n      isParsing: true,\n      progress: 0,\n      message: `Reading ${file.name}...`\n    });\n    try {\n      const text = await file.text();\n      setParsingProgress({\n        isParsing: true,\n        progress: 50,\n        message: 'Parsing CSV data...'\n      });\n      let parseResult;\n      if (parseMode === 'birite') {\n        parseResult = parseBiRiteCSV(text);\n      } else {\n        parseResult = parseInvoiceCSV(text, {\n          columnMappings,\n          delimiter: ',',\n          currencySymbol: '$'\n        });\n      }\n      setParsingProgress({\n        isParsing: true,\n        progress: 90,\n        message: 'Processing data...'\n      });\n      const newState = {\n        ...uploadState,\n        [`${period}File`]: file,\n        [`${period}Data`]: parseResult.data,\n        errors: period === 'current' ? parseResult.errors : [...uploadState.errors, ...parseResult.errors]\n      };\n      setUploadState(newState);\n      setParsingProgress({\n        isParsing: false,\n        progress: 100,\n        message: `Successfully processed ${file.name}`\n      });\n\n      // Check if both files are uploaded\n      if (newState.currentData && newState.previousData) {\n        onDataUploaded({\n          currentInvoices: newState.currentData.records,\n          previousInvoices: newState.previousData.records\n        });\n        setUploadState(prev => ({\n          ...prev,\n          success: true\n        }));\n      }\n    } catch (error) {\n      setUploadState(prev => ({\n        ...prev,\n        errors: [...prev.errors, {\n          row: 0,\n          column: 'file',\n          value: file.name,\n          message: `Error reading file: ${error instanceof Error ? error.message : 'Unknown error'}`\n        }]\n      }));\n      setParsingProgress({\n        isParsing: false,\n        progress: 0,\n        message: 'Error processing file'\n      });\n    }\n  }, [uploadState, columnMappings, parseMode, onDataUploaded]);\n  const handleFileSelect = (event, period) => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file && file.type === 'text/csv') {\n      handleFileUpload(file, period);\n    }\n  };\n  const clearData = () => {\n    setUploadState({\n      currentFile: null,\n      previousFile: null,\n      currentData: null,\n      previousData: null,\n      errors: [],\n      success: false\n    });\n    onClearData();\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"bg-white shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      className: \"p-4 sm:p-6\",\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        className: \"text-base sm:text-lg font-semibold flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Upload, {\n          className: \"w-5 h-5 text-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), \"Upload Invoice Data\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-sm font-medium text-gray-700 mb-2 block\",\n          children: \"CSV Format:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center gap-2 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"parseMode\",\n              checked: parseMode === 'custom',\n              onChange: () => setParseMode('custom'),\n              className: \"rounded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), \"Custom Format\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center gap-2 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"parseMode\",\n              checked: parseMode === 'birite',\n              onChange: () => setParseMode('birite'),\n              className: \"rounded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), \"BiRite Format (from your sample file)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), parseMode === 'custom' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-4 bg-gray-50 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-sm font-medium text-gray-700 mb-3 block\",\n          children: \"Column Mappings:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-3 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-xs text-gray-600 mb-1\",\n              children: \"Customer Column:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: columnMappings.customerColumn,\n              onChange: e => setColumnMappings(prev => ({\n                ...prev,\n                customerColumn: e.target.value\n              })),\n              className: \"w-full px-2 py-1 border border-gray-300 rounded text-xs\",\n              placeholder: \"e.g., Customer, Client\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-xs text-gray-600 mb-1\",\n              children: \"Product Column:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: columnMappings.productColumn,\n              onChange: e => setColumnMappings(prev => ({\n                ...prev,\n                productColumn: e.target.value\n              })),\n              className: \"w-full px-2 py-1 border border-gray-300 rounded text-xs\",\n              placeholder: \"e.g., Product, Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-xs text-gray-600 mb-1\",\n              children: \"Quantity Column:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: columnMappings.quantityColumn,\n              onChange: e => setColumnMappings(prev => ({\n                ...prev,\n                quantityColumn: e.target.value\n              })),\n              className: \"w-full px-2 py-1 border border-gray-300 rounded text-xs\",\n              placeholder: \"e.g., Quantity, Qty, Cases\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-xs text-gray-600 mb-1\",\n              children: \"Revenue Column:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: columnMappings.revenueColumn,\n              onChange: e => setColumnMappings(prev => ({\n                ...prev,\n                revenueColumn: e.target.value\n              })),\n              className: \"w-full px-2 py-1 border border-gray-300 rounded text-xs\",\n              placeholder: \"e.g., Revenue, Amount, Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      className: \"p-4 sm:p-6 pt-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium text-gray-900 flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(FileText, {\n              className: \"w-4 h-4 text-green-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), \"Current Period Data\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-gray-400 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".csv\",\n              onChange: e => handleFileSelect(e, 'current'),\n              className: \"hidden\",\n              id: \"current-file-upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"current-file-upload\",\n              className: \"cursor-pointer\",\n              children: [/*#__PURE__*/_jsxDEV(Upload, {\n                className: \"w-8 h-8 mx-auto mb-2 text-gray-400\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600 mb-2\",\n                children: \"Click to upload current invoice data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-gray-500\",\n                children: \"CSV files only\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), uploadState.currentFile && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white border rounded-lg p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(FileText, {\n                  className: \"w-4 h-4 text-green-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm font-medium\",\n                  children: uploadState.currentFile.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-500\",\n                children: formatFileSize(uploadState.currentFile.size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), uploadState.currentData && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 text-xs text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [uploadState.currentData.metadata.totalRecords, \" records\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [uploadState.currentData.metadata.uniqueCustomers, \" customers\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [uploadState.currentData.metadata.uniqueProducts, \" products\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [formatCurrency(uploadState.currentData.metadata.totalRevenue), \" total revenue\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium text-gray-900 flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(FileText, {\n              className: \"w-4 h-4 text-orange-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), \"Previous Period Data\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-gray-400 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".csv\",\n              onChange: e => handleFileSelect(e, 'previous'),\n              className: \"hidden\",\n              id: \"previous-file-upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"previous-file-upload\",\n              className: \"cursor-pointer\",\n              children: [/*#__PURE__*/_jsxDEV(Upload, {\n                className: \"w-8 h-8 mx-auto mb-2 text-gray-400\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600 mb-2\",\n                children: \"Click to upload previous invoice data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-gray-500\",\n                children: \"CSV files only\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), uploadState.previousFile && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white border rounded-lg p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(FileText, {\n                  className: \"w-4 h-4 text-orange-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm font-medium\",\n                  children: uploadState.previousFile.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-500\",\n                children: formatFileSize(uploadState.previousFile.size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this), uploadState.previousData && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 text-xs text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [uploadState.previousData.metadata.totalRecords, \" records\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [uploadState.previousData.metadata.uniqueCustomers, \" customers\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [uploadState.previousData.metadata.uniqueProducts, \" products\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [formatCurrency(uploadState.previousData.metadata.totalRevenue), \" total revenue\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), parsingProgress.isParsing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-blue-700\",\n            children: parsingProgress.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full bg-blue-200 rounded-full h-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-blue-600 h-2 rounded-full transition-all duration-300\",\n            style: {\n              width: `${parsingProgress.progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this), uploadState.success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 bg-green-50 border border-green-200 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 text-green-700\",\n          children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font-medium\",\n            children: \"Data successfully uploaded!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-green-600 mt-1\",\n          children: \"Both current and previous period data are now loaded. You can view comparisons and alerts.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this), uploadState.errors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 bg-red-50 border border-red-200 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n            className: \"w-4 h-4 text-red-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font-medium text-red-700\",\n            children: \"Parse Errors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-red-600 space-y-1 max-h-32 overflow-y-auto\",\n          children: uploadState.errors.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-start gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500\",\n              children: [\"Row \", error.row, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: error.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mt-6 pt-4 border-t\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline\",\n          size: \"sm\",\n          onClick: clearData,\n          disabled: !uploadState.currentFile && !uploadState.previousFile,\n          children: [/*#__PURE__*/_jsxDEV(X, {\n            className: \"w-4 h-4 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), \"Clear Data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), uploadState.success && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: \"Ready for analysis \\u2728\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(CSVUpload, \"FzLrCLqTAjXqDyOftPligeb2aS4=\");\n_c = CSVUpload;\nexport default CSVUpload;\nvar _c;\n$RefreshReg$(_c, \"CSVUpload\");","map":{"version":3,"names":["React","useState","useCallback","Card","CardContent","CardHeader","CardTitle","Button","Upload","FileText","AlertCircle","CheckCircle","X","parseInvoiceCSV","parseBiRiteCSV","jsxDEV","_jsxDEV","CSVUpload","onDataUploaded","onClearData","_s","uploadState","setUploadState","currentFile","previousFile","currentData","previousData","errors","success","parsingProgress","setParsingProgress","isParsing","progress","message","columnMappings","setColumnMappings","customerColumn","productColumn","quantityColumn","revenueColumn","dateColumn","parseMode","setParseMode","handleFileUpload","file","period","name","text","parseResult","delimiter","currencySymbol","newState","data","currentInvoices","records","previousInvoices","prev","error","row","column","value","Error","handleFileSelect","event","_event$target$files","target","files","type","clearData","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatCurrency","amount","Intl","NumberFormat","style","currency","format","className","children","fileName","_jsxFileName","lineNumber","columnNumber","checked","onChange","e","placeholder","accept","id","htmlFor","size","metadata","totalRecords","uniqueCustomers","uniqueProducts","totalRevenue","width","length","map","index","variant","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/isaachirsch/Desktop/GalantCo/SalesTracker/src/components/CSVUpload.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Upload, FileText, AlertCircle, CheckCircle, X } from 'lucide-react';\nimport { parseInvoiceCSV, parseBiRiteCSV, InvoiceRecord, ParsedCSVData, CSVParseError } from '../utils/csvParser';\n\ninterface CSVUploadProps {\n  onDataUploaded: (data: { currentInvoices: InvoiceRecord[]; previousInvoices: InvoiceRecord[] }) => void;\n  onClearData: () => void;\n}\n\ninterface UploadState {\n  currentFile: File | null;\n  previousFile: File | null;\n  currentData: ParsedCSVData | null;\n  previousData: ParsedCSVData | null;\n  errors: CSVParseError[];\n  success: boolean;\n}\n\nconst CSVUpload: React.FC<CSVUploadProps> = ({ onDataUploaded, onClearData }) => {\n  const [uploadState, setUploadState] = useState<UploadState>({\n    currentFile: null,\n    previousFile: null,\n    currentData: null,\n    previousData: null,\n    errors: [],\n    success: false\n  });\n\n  const [parsingProgress, setParsingProgress] = useState<{\n    isParsing: boolean;\n    progress: number;\n    message: string;\n  }>({\n    isParsing: false,\n    progress: 0,\n    message: ''\n  });\n\n  const [columnMappings, setColumnMappings] = useState({\n    customerColumn: 'Customer',\n    productColumn: 'Product',\n    quantityColumn: 'Quantity',\n    revenueColumn: 'Revenue',\n    dateColumn: 'Date'\n  });\n\n  const [parseMode, setParseMode] = useState<'custom' | 'birite'>('custom');\n\n  const handleFileUpload = useCallback(async (\n    file: File,\n    period: 'current' | 'previous'\n  ) => {\n    setParsingProgress({\n      isParsing: true,\n      progress: 0,\n      message: `Reading ${file.name}...`\n    });\n\n    try {\n      const text = await file.text();\n      setParsingProgress({\n        isParsing: true,\n        progress: 50,\n        message: 'Parsing CSV data...'\n      });\n\n      let parseResult;\n      if (parseMode === 'birite') {\n        parseResult = parseBiRiteCSV(text);\n      } else {\n        parseResult = parseInvoiceCSV(text, {\n          columnMappings,\n          delimiter: ',',\n          currencySymbol: '$'\n        });\n      }\n\n      setParsingProgress({\n        isParsing: true,\n        progress: 90,\n        message: 'Processing data...'\n      });\n\n      const newState = {\n        ...uploadState,\n        [`${period}File`]: file,\n        [`${period}Data`]: parseResult.data,\n        errors: period === 'current' ? parseResult.errors : [...uploadState.errors, ...parseResult.errors]\n      };\n\n      setUploadState(newState);\n\n      setParsingProgress({\n        isParsing: false,\n        progress: 100,\n        message: `Successfully processed ${file.name}`\n      });\n\n      // Check if both files are uploaded\n      if (newState.currentData && newState.previousData) {\n        onDataUploaded({\n          currentInvoices: newState.currentData.records,\n          previousInvoices: newState.previousData.records\n        });\n        setUploadState(prev => ({ ...prev, success: true }));\n      }\n\n    } catch (error) {\n      setUploadState(prev => ({\n        ...prev,\n        errors: [...prev.errors, {\n          row: 0,\n          column: 'file',\n          value: file.name,\n          message: `Error reading file: ${error instanceof Error ? error.message : 'Unknown error'}`\n        }]\n      }));\n      \n      setParsingProgress({\n        isParsing: false,\n        progress: 0,\n        message: 'Error processing file'\n      });\n    }\n  }, [uploadState, columnMappings, parseMode, onDataUploaded]);\n\n  const handleFileSelect = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    period: 'current' | 'previous'\n  ) => {\n    const file = event.target.files?.[0];\n    if (file && file.type === 'text/csv') {\n      handleFileUpload(file, period);\n    }\n  };\n\n  const clearData = () => {\n    setUploadState({\n      currentFile: null,\n      previousFile: null,\n      currentData: null,\n      previousData: null,\n      errors: [],\n      success: false\n    });\n    onClearData();\n  };\n\n  const formatFileSize = (bytes: number) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount);\n  };\n\n  return (\n    <Card className=\"bg-white shadow-lg\">\n      <CardHeader className=\"p-4 sm:p-6\">\n        <CardTitle className=\"text-base sm:text-lg font-semibold flex items-center gap-2\">\n          <Upload className=\"w-5 h-5 text-blue-500\" />\n          Upload Invoice Data\n        </CardTitle>\n        \n        {/* Parse Mode Selection */}\n        <div className=\"mt-4\">\n          <label className=\"text-sm font-medium text-gray-700 mb-2 block\">CSV Format:</label>\n          <div className=\"flex gap-4\">\n            <label className=\"flex items-center gap-2 text-sm\">\n              <input\n                type=\"radio\"\n                name=\"parseMode\"\n                checked={parseMode === 'custom'}\n                onChange={() => setParseMode('custom')}\n                className=\"rounded\"\n              />\n              Custom Format\n            </label>\n            <label className=\"flex items-center gap-2 text-sm\">\n              <input\n                type=\"radio\"\n                name=\"parseMode\"\n                checked={parseMode === 'birite'}\n                onChange={() => setParseMode('birite')}\n                className=\"rounded\"\n              />\n              BiRite Format (from your sample file)\n            </label>\n          </div>\n        </div>\n\n        {/* Column Mappings for Custom Format */}\n        {parseMode === 'custom' && (\n          <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\n            <label className=\"text-sm font-medium text-gray-700 mb-3 block\">Column Mappings:</label>\n            <div className=\"grid grid-cols-2 gap-3 text-sm\">\n              <div>\n                <label className=\"block text-xs text-gray-600 mb-1\">Customer Column:</label>\n                <input\n                  type=\"text\"\n                  value={columnMappings.customerColumn}\n                  onChange={(e) => setColumnMappings(prev => ({ ...prev, customerColumn: e.target.value }))}\n                  className=\"w-full px-2 py-1 border border-gray-300 rounded text-xs\"\n                  placeholder=\"e.g., Customer, Client\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-xs text-gray-600 mb-1\">Product Column:</label>\n                <input\n                  type=\"text\"\n                  value={columnMappings.productColumn}\n                  onChange={(e) => setColumnMappings(prev => ({ ...prev, productColumn: e.target.value }))}\n                  className=\"w-full px-2 py-1 border border-gray-300 rounded text-xs\"\n                  placeholder=\"e.g., Product, Item\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-xs text-gray-600 mb-1\">Quantity Column:</label>\n                <input\n                  type=\"text\"\n                  value={columnMappings.quantityColumn}\n                  onChange={(e) => setColumnMappings(prev => ({ ...prev, quantityColumn: e.target.value }))}\n                  className=\"w-full px-2 py-1 border border-gray-300 rounded text-xs\"\n                  placeholder=\"e.g., Quantity, Qty, Cases\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-xs text-gray-600 mb-1\">Revenue Column:</label>\n                <input\n                  type=\"text\"\n                  value={columnMappings.revenueColumn}\n                  onChange={(e) => setColumnMappings(prev => ({ ...prev, revenueColumn: e.target.value }))}\n                  className=\"w-full px-2 py-1 border border-gray-300 rounded text-xs\"\n                  placeholder=\"e.g., Revenue, Amount, Total\"\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </CardHeader>\n\n      <CardContent className=\"p-4 sm:p-6 pt-0\">\n        {/* File Upload Sections */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Current Period Upload */}\n          <div className=\"space-y-4\">\n            <h3 className=\"font-medium text-gray-900 flex items-center gap-2\">\n              <FileText className=\"w-4 h-4 text-green-500\" />\n              Current Period Data\n            </h3>\n            \n            <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-gray-400 transition-colors\">\n              <input\n                type=\"file\"\n                accept=\".csv\"\n                onChange={(e) => handleFileSelect(e, 'current')}\n                className=\"hidden\"\n                id=\"current-file-upload\"\n              />\n              <label htmlFor=\"current-file-upload\" className=\"cursor-pointer\">\n                <Upload className=\"w-8 h-8 mx-auto mb-2 text-gray-400\" />\n                <p className=\"text-sm text-gray-600 mb-2\">Click to upload current invoice data</p>\n                <p className=\"text-xs text-gray-500\">CSV files only</p>\n              </label>\n            </div>\n\n            {uploadState.currentFile && (\n              <div className=\"bg-white border rounded-lg p-3\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <FileText className=\"w-4 h-4 text-green-500\" />\n                    <span className=\"text-sm font-medium\">{uploadState.currentFile.name}</span>\n                  </div>\n                  <span className=\"text-xs text-gray-500\">{formatFileSize(uploadState.currentFile.size)}</span>\n                </div>\n                \n                {uploadState.currentData && (\n                  <div className=\"mt-2 text-xs text-gray-600\">\n                    <p>{uploadState.currentData.metadata.totalRecords} records</p>\n                    <p>{uploadState.currentData.metadata.uniqueCustomers} customers</p>\n                    <p>{uploadState.currentData.metadata.uniqueProducts} products</p>\n                    <p>{formatCurrency(uploadState.currentData.metadata.totalRevenue)} total revenue</p>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* Previous Period Upload */}\n          <div className=\"space-y-4\">\n            <h3 className=\"font-medium text-gray-900 flex items-center gap-2\">\n              <FileText className=\"w-4 h-4 text-orange-500\" />\n              Previous Period Data\n            </h3>\n            \n            <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-gray-400 transition-colors\">\n              <input\n                type=\"file\"\n                accept=\".csv\"\n                onChange={(e) => handleFileSelect(e, 'previous')}\n                className=\"hidden\"\n                id=\"previous-file-upload\"\n              />\n              <label htmlFor=\"previous-file-upload\" className=\"cursor-pointer\">\n                <Upload className=\"w-8 h-8 mx-auto mb-2 text-gray-400\" />\n                <p className=\"text-sm text-gray-600 mb-2\">Click to upload previous invoice data</p>\n                <p className=\"text-xs text-gray-500\">CSV files only</p>\n              </label>\n            </div>\n\n            {uploadState.previousFile && (\n              <div className=\"bg-white border rounded-lg p-3\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <FileText className=\"w-4 h-4 text-orange-500\" />\n                    <span className=\"text-sm font-medium\">{uploadState.previousFile.name}</span>\n                  </div>\n                  <span className=\"text-xs text-gray-500\">{formatFileSize(uploadState.previousFile.size)}</span>\n                </div>\n                \n                {uploadState.previousData && (\n                  <div className=\"mt-2 text-xs text-gray-600\">\n                    <p>{uploadState.previousData.metadata.totalRecords} records</p>\n                    <p>{uploadState.previousData.metadata.uniqueCustomers} customers</p>\n                    <p>{uploadState.previousData.metadata.uniqueProducts} products</p>\n                    <p>{formatCurrency(uploadState.previousData.metadata.totalRevenue)} total revenue</p>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Parsing Progress */}\n        {parsingProgress.isParsing && (\n          <div className=\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\n              <span className=\"text-sm text-blue-700\">{parsingProgress.message}</span>\n            </div>\n            <div className=\"w-full bg-blue-200 rounded-full h-2\">\n              <div \n                className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                style={{ width: `${parsingProgress.progress}%` }}\n              ></div>\n            </div>\n          </div>\n        )}\n\n        {/* Success Message */}\n        {uploadState.success && (\n          <div className=\"mt-6 p-4 bg-green-50 border border-green-200 rounded-lg\">\n            <div className=\"flex items-center gap-2 text-green-700\">\n              <CheckCircle className=\"w-4 h-4\" />\n              <span className=\"text-sm font-medium\">Data successfully uploaded!</span>\n            </div>\n            <p className=\"text-xs text-green-600 mt-1\">\n              Both current and previous period data are now loaded. You can view comparisons and alerts.\n            </p>\n          </div>\n        )}\n\n        {/* Error Display */}\n        {uploadState.errors.length > 0 && (\n          <div className=\"mt-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <AlertCircle className=\"w-4 h-4 text-red-600\" />\n              <span className=\"text-sm font-medium text-red-700\">Parse Errors</span>\n            </div>\n            <div className=\"text-xs text-red-600 space-y-1 max-h-32 overflow-y-auto\">\n              {uploadState.errors.map((error, index) => (\n                <div key={index} className=\"flex items-start gap-2\">\n                  <span className=\"text-red-500\">Row {error.row}:</span>\n                  <span>{error.message}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Action Buttons */}\n        <div className=\"flex justify-between items-center mt-6 pt-4 border-t\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={clearData}\n            disabled={!uploadState.currentFile && !uploadState.previousFile}\n          >\n            <X className=\"w-4 h-4 mr-2\" />\n            Clear Data\n          </Button>\n          \n          {uploadState.success && (\n            <div className=\"text-sm text-gray-600\">\n              Ready for analysis ✨\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default CSVUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}